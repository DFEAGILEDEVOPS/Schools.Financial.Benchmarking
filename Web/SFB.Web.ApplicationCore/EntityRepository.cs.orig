using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;

namespace Web.Domain
{
    public class EntityRepository : IEntityRepository
    {
        private readonly DbContext _entities;

        public EntityRepository(DbContext entities)
        {
            _entities = entities;
        }

        public IQueryable<Employee> GetEmployees()
        {
            return _entities.Set<Employee>();
        }

        public Employee GetEmployee(int id)
        {
            var employee = _entities.Set<Employee>().FirstOrDefault(x => x.EmployeeNumber == id);
            if (employee != null)
            {
                var supervisor = _entities.Set<Employee>().FirstOrDefault(x => x.FullName == employee.SupervisorName);
                employee.Supervisor = supervisor;
                return employee;
            }
            return default(Employee);
        }

        public IQueryable<Submission> GetSubmissions()
        {
            return _entities.Set<Submission>();
        }

        public Submission SaveSubmission(Submission submission)
        {
            if(submission.Id > 0)
            {
                var submissionFromDb = _entities.Set<Submission>().Single(s => s.Id == submission.Id);
                submissionFromDb.PerformingAtExceedingLevel = submission.PerformingAtExceedingLevel;
                submissionFromDb.AtRiskUnderPerforming = submission.AtRiskUnderPerforming;
                submissionFromDb.IsUnderPerforming = submission.IsUnderPerforming;
                submissionFromDb.CaseWorkerAssigned = submission.CaseWorkerAssigned;
                submissionFromDb.FormalMeasuresStarted = submission.FormalMeasuresStarted;
                submissionFromDb.GridMarking = submission.GridMarking;
<<<<<<< HEAD
                submissionFromDb.IsPublished = submission.IsPublished;
                submissionFromDb.DatePublished = submission.DatePublished;
=======
                if (submission.IsPublished)
                {
                    submissionFromDb.IsPublished = true;
                    submissionFromDb.DatePublished = submission.DatePublished;
                }
>>>>>>> 02f30e98a10b1b60689b05e9321bae72f061df5a
            }
            else
            {
                _entities.Set<Submission>().Add(submission);
            }
            _entities.SaveChanges();

            return submission;
        }

        public Submission GetSubmission(int submissionId)
        {
            return _entities.Set<Submission>().First(x => x.Id == submissionId);
        }

        public IQueryable<Action> GetRecentActions()
        {
            return _entities.Set<Action>().AsQueryable();
        }

        public Action SaveAction(Action action)
        {
            _entities.Set<Action>().Add(action);
            _entities.SaveChanges();
            return action;
        }


        public IQueryable<Employee> GetTeam(int lineManagerId)
        {
            var lineManager = _entities.Set<Employee>().FirstOrDefault(x => x.EmployeeNumber == lineManagerId);
            if (lineManager != null)
            {
                var results = _entities.Set<Employee>()
                    .Where(x => x.SupervisorName == lineManager.FullName);

                return results;
            }
            return new List<Employee>().AsQueryable();
        }
    }
}