@using SFB.Web.ApplicationCore.Helpers.Enums
@using SFB.Web.UI.Helpers
@using SFB.Web.UI.Helpers.Enums
@model List<SFB.Web.UI.Models.ChartViewModel>

@for (int i = 0; i < Model.Count; i++)
{
    <div class="chart-container govuk-grid-column-full no-padding" data-group="@Model[i].ChartGroup">
        <div id="chart-content" class="bm-charts-list" aria-labelledby="accordion-chartName-heading">
            @if (Model[i].DataJson != null)
            {
                <div class="govuk-grid-row">
                    <div class=" govuk-grid-column-full">
                        <div class="chart-wrapper" style="display: @Html.Raw(ViewBag.ChartFormat == ChartFormat.Tables ? "none" : "inline-block")">
                            <div id="chart_@i" class="qc chart" data-chart-title="@Model[i].Name" data-axis-label="@Model[i].ShowValue.GetDescription() @ChartLabelForCentralFinance()" data-chart='@Model[i].DataJson' data-img=''></div>
                        </div>
                    </div>
                </div>
                <input name="benchmarkSchoolIndex" type="hidden" value="@Model[i].BenchmarkSchoolIndex" />
                <input name="incompleteFinanceDataIndex" type="hidden" value="@string.Join(",", Model[i].IncompleteFinanceDataIndex)" />
                <input name="incompleteWorkforceDataIndex" type="hidden" value="@string.Join(",", Model[i].IncompleteWorkforceDataIndex)" />
            }
        </div>
    </div>
}

@helper ChartLabelForCentralFinance()
{
    if (ViewBag.ChartGroup != null && ViewBag.ChartGroup != ChartGroupType.Workforce)
    {
        if (ViewBag.EstablishmentType != EstablishmentType.Maintained && ViewBag.Financing != null)
        {
            var centralFinance = (CentralFinancingType)Enum.Parse(typeof(CentralFinancingType), ViewBag.Financing.ToString());
            <text>(@centralFinance.GetDescription())</text>
        }
    }
}


