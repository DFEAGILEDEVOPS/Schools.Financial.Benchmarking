@using SFB.Web.UI.Helpers.Enums
@model SFB.Web.UI.Models.ChartViewModel

<div class="govuk-inset-text app-govuk-inset-text--narrow data-table-panel">
    <h4 class="heading-small table-header">This includes</h4>

    <table class="govuk-table tablesorter data-table-js includes-table">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header school-column">School</th>
                @foreach (var column in Model.TableColumns)
                {
                    <th scope="col" class="govuk-table__header">
                        <span>@column.Name</span>

                        <div class="sort-icon"></div>

                        @if (column.HelpTooltip != null)
                        {
                            <span class="help-icon no-margin hide-in-print">
                                <span class="icon dark-blue">
                                    <a class="helpLink hide-in-print" href="#" id="additionalGrantModal" onclick="DfE.Util.ModalRenderer.renderAdditionalGrantModal()">
                                    </a>
                                </span>
                            </span>
                        }
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var school in Model.TableColumns[0].BenchmarkData)
            {
                <tr class="govuk-table__row">
                    <td class="school-column">
                        @{
                            var style = school.Urn == ViewBag.HomeSchoolId?.ToString() ? "highlight-field" : "";

                            if (school.Urn.StartsWith("MAT"))
                            {
                                var name = school.School.Substring(0, school.School.LastIndexOf("#"));
                                <a target="_self" href="/trust/index?companyNo=@school.Urn&name=@name" class="@style">@name</a>
                            }
                            else
                            {
                                <a target="_self" href="/school/detail?urn=@school.Urn" class="@style">@school.School</a>
                            }
                        }

                    </td>
                    @foreach (var column in Model.TableColumns)
                    {
                        var amount = column.BenchmarkData.FirstOrDefault(b => b.School == school.School).Amount;
                        if (Model.ShowValue == UnitType.PercentageOfTotalExpenditure || Model.ShowValue == UnitType.PercentageOfTotalIncome)
                        {
                            if (amount.HasValue)
                            {
                                <td class="numeric">@amount.GetValueOrDefault().ToString("F1")%</td>
                            }
                            else
                            {
                                <td class="numeric">Not applicable</td>
                            }
                        }
                        else
                        {
                            if (amount.HasValue)
                            {
                                <td class="numeric">@amount.GetValueOrDefault().ToString("C0")</td>
                            }
                            else
                            {
                                <td class="numeric">Not applicable</td>
                            }
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
 </div>