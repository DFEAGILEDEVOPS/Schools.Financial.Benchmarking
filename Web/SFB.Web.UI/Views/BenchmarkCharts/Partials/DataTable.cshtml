@using SFB.Web.UI.Helpers.Enums
@model SFB.Web.UI.Models.ChartViewModel

<h3 class="heading-medium">What does this include?</h3>

<table class="tablesorter dataTable">
    <thead>
    <tr>
        <th class="school-column">School</th>
        @foreach (var column in Model.TableColumns)
        {
            <th>
                <span>@column.Name</span>
                
                <div class="sort-icon"></div>
            </th>

            if (column.HelpTooltip != null)
            {
                <td>
                    <span class="help-icon help-chart hide-in-print">
                        <span class="icon dark-blue">
                            <a href="#" class="js-modal" data-modal-title="@column.Name" data-modal-text="@column.HelpTooltip" data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                <span class="visuallyhidden">Open help text for @column.Name opens a popup</span>
                            </a>
                        </span>
                    </span>
                </td>
            }

        }
    </tr>
    </thead>
    <tbody>
    @foreach (var school in Model.TableColumns[0].BenchmarkData)
    {
        <tr>
            <td class="school-column">
                @{
                    var style = school.Urn == ViewBag.HomeSchoolId ? "highlight-field" : "";

                    if (school.Urn.StartsWith("MAT"))
                    {
                        var name = school.School.Substring(0, school.School.LastIndexOf("#"));
                        <a target="_self" href="/trust/index?matno=@school.Urn&name=@name" class="@style">@name</a>
                    }
                    else
                    {
                        <a target="_self" href="/school/detail?urn=@school.Urn" class="@style">@school.School.Substring(0, school.School.LastIndexOf("#"))</a>
                    }
                }

            </td>
            @foreach (var column in Model.TableColumns)
            {
                var amount = column.BenchmarkData.FirstOrDefault(b => b.School == school.School).Amount;
                if (Model.ShowValue == UnitType.PercentageOfTotal)
                {
                    if (amount.HasValue)
                    {
                        <td class="numeric">@amount.GetValueOrDefault().ToString("F1")%</td>
                    }
                    else
                    {
                        <td class="numeric">Not applicable</td>
                    }
                }
                else
                {
                    if (amount.HasValue)
                    {
                        <td class="numeric">@amount.GetValueOrDefault().ToString("C0")</td>
                    }
                    else
                    {
                        <td class="numeric">Not applicable</td>
                    }
                }
                if (column.HelpTooltip != null)
                {
                    <td></td>
                }
            }
        </tr>
    }
    </tbody>
</table>