@using SFB.Web.Domain.Models
@using SFB.Web.Domain.Helpers
@using System.Reflection;
@using Microsoft.Ajax.Utilities
@using SFB.Web.Common
@using SFB.Web.Common.Attributes
@model SFB.Web.UI.Models.BenchmarkChartListViewModel

<table>
    <thead>
    <tr>
        <th scope="col">Characteristic</th>
        <th scope="col">Default school value</th>
        <th scope="col">Comparison criteria</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>Finance type</td>
        @if (Model.BenchmarkSchoolData.FinancialType == SchoolFinancialType.Academies)
        {
            <td>Academy</td>
        }
        else
        {
            <td>Maintained</td>
        }
        <td>@Model.SearchedEstablishmentType</td>
    </tr>
    <tr>
        <td>Area</td>
        <td>@Model.SchoolArea</td>
        <td>@Model.SelectedArea</td>
    </tr>
    @foreach (var property in (typeof(BenchmarkCriteria)).GetProperties())
    {
        var dbAttribute = property.GetCustomAttributes(typeof(DBFieldAttribute)).FirstOrDefault();
        var uiNameAttribute = property.GetCustomAttributes(typeof(PrettyNameAttribute)).FirstOrDefault();

        if (dbAttribute != null && dbAttribute is DBFieldAttribute)
        {
            var fieldValue = Model.AdvancedCriteria.GetType().GetProperty(property.Name).GetValue(Model.AdvancedCriteria, null);
            if (fieldValue != null)
            {
                @Html.Raw("<tr>")
                
                var fieldName = (dbAttribute as DBFieldAttribute).Name;
                var fieldType = (dbAttribute as DBFieldAttribute).Type;
                var uiName = (uiNameAttribute as PrettyNameAttribute).Name;
                if (!uiName.IsNullOrWhiteSpace())
                {
                    switch (fieldType)
                    {
                        case CriteriaFieldComparisonTypes.MIN:
                            @Html.Raw($"<td>{uiName} (minimum)</td>")
                            @Html.Raw($"<td>{Model.BenchmarkSchoolData.GetDecimal(fieldName)}</td>")
                            @Html.Raw($"<td>{fieldValue}</td>")
                            break;
                        case CriteriaFieldComparisonTypes.MAX:
                            @Html.Raw($"<td>{uiName} (maximum)</td>")
                            @Html.Raw($"<td>{Model.BenchmarkSchoolData.GetDecimal(fieldName)}</td>")
                            @Html.Raw($"<td>{fieldValue}</td>")
                            break;
                        case CriteriaFieldComparisonTypes.EQUALTO:
                            if (fieldValue is string)
                            {
                                @Html.Raw($"<td>{uiName}</td>")
                                @Html.Raw($"<td>{Model.BenchmarkSchoolData.GetString(fieldName)}</td>")
                                @Html.Raw($"<td>{fieldValue}</td>")
                            }
                            else if (fieldValue is int)
                            {
                                @Html.Raw($"<td>{uiName}</td>")
                                @Html.Raw($"<td>{Model.BenchmarkSchoolData.GetInt(fieldName)}</td>")
                                @Html.Raw($"<td>{fieldValue}</td>")
                            }
                            else if (fieldValue is Array)
                            {
                                @Html.Raw($"<td>{uiName}</td>")
                                @Html.Raw($"<td>{Model.BenchmarkSchoolData.GetString(fieldName)}</td>")
                                @Html.Raw("<td>")
                                @Html.Raw(string.Join(", ", fieldValue as string[]))
                                @Html.Raw("</td>")
                            }
                            break;
                    }

                    @Html.Raw("</tr>")
                }
            }
        }
    }
    </tbody>
</table>