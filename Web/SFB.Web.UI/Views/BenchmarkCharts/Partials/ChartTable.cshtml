@using Microsoft.Ajax.Utilities
@using SFB.Web.UI.Helpers.Enums
@model List<SFB.Web.Domain.Models.BenchmarkChartData>


    <table class="tablesorter chart-table">
        <thead>
        <tr>
            <th class="school-column" scope="col" data-header="School name">
                School name
                <a aria-hidden="True" class="hide-show-button hide detail hide-in-print" href="javascript:void(0)" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)">Hide details&#9654;</a>
            </th>
            <th class="detail" scope="col" data-header="Local authority">Local authority</th>
            <th class="detail" scope="col" data-header="School type">School type</th>
            <th class="detail" scope="col" data-header="Number of pupils">Number of pupils</th>
            <th scope="col" data-header="Amount">
                <a aria-hidden="True" class="hide-show-button show detail hide-in-print" href="javascript:void(0)" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)" style="display: none">&#9664;Show details</a>
                <span aria-label="@GetAmountAriaLabel(Model.First().Unit)">Amount</span>
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var schoolBenchmarkData in Model)
        {
            <tr>
                @if (ViewBag.HomeSchoolId == schoolBenchmarkData.Urn)
                {
                    <td class="school-column" data-header="School name">
                        <span class="bold-xsmall">@schoolBenchmarkData.School.SubstringUpToFirst('#')</span><span class="visually-hidden"> index school</span>
                    </td>
                }
                else
                {
                    <td class="school-column" data-header="School name">@schoolBenchmarkData.School.SubstringUpToFirst('#')</td>
                }
                <td class="detail" data-header="Local authority">@schoolBenchmarkData.La</td>
                <td class="detail" data-header="School type">@schoolBenchmarkData.Type</td>
                <td class="detail" data-header="Number of pupils">@schoolBenchmarkData.PupilCount</td>
                <td data-header="Amount">
                    @if (schoolBenchmarkData.Amount.HasValue)
                    {
                        switch ((UnitType)Enum.Parse(typeof(UnitType),schoolBenchmarkData.Unit))
                        {
                            case UnitType.PercentageOfTotal:
                            case UnitType.FTERatioToTotalFTE:
                                @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("F1")<text>%</text>
                                break;
                            case UnitType.HeadcountPerFTE:
                            case UnitType.AbsoluteCount:                            
                            case UnitType.NoOfPupilsPerMeasure:
                                @schoolBenchmarkData.Amount.GetValueOrDefault()
                                break;
                            default:
                                @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("C0")
                                break;
                        }
                    }
                    else
                    {
                        <text>Not applicable</text>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

@helper GetAmountAriaLabel(string unit)
{
switch ((UnitType)Enum.Parse(typeof(UnitType), unit))
{
    case UnitType.PercentageOfTotal:
            <text>Percentage of total</text>;
        break;
    case UnitType.PerTeacher:
            <text>Amount per teacher</text>
        break;
    case UnitType.PerPupil:
            <text>Amount per pupil</text>
        break;
    case UnitType.HeadcountPerFTE:
            <text>Headcount per full time equivalent</text>
        break;
    case UnitType.FTERatioToTotalFTE:
            <text>Percentage of workforce</text>
        break;
    case UnitType.NoOfPupilsPerMeasure:
            <text>Pupils per measure</text>
        break;
    default:
            <text>Amount</text>
        break;
}
}