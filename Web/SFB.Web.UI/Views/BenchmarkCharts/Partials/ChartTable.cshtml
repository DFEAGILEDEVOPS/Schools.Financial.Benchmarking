@using SFB.Web.UI.Helpers.Enums
@using SFB.Web.ApplicationCore.Helpers.Enums
@model SFB.Web.UI.Models.ChartViewModel

<button onclick="DfE.Util.focusTo('post-table-@Model.Name.Replace(" ","")')" class="hidden-button a-button">Skip the table @Model.Name</button>

<div>
    <button aria-label="Display @Model.Name table in detailed view" class="mobile-hide-show-button show detail hide-in-print a-button mobile-only" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetailsMobile(this)">Show more information</button>
    <button aria-label="Display @Model.Name table in summary view" class="mobile-hide-show-button hide detail hide-in-print a-button mobile-only" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetailsMobile(this)" style="display: none">Show less information</button>

    <table class="tablesorter data-table-js chart-table chart-table--mobile-only-view chart-table--summary-view">
        <thead>
            <tr>
                <th class="school-column sortInitialOrder-asc" scope="col" data-header="School name">
                    School name
                </th>
                <th class="sortInitialOrder-desc" scope="col" data-header="Amount">
                    <span aria-label="@ViewHelpers.GetAmountHeaderAriaLabel(Model.BenchmarkData.First().Unit)">@ViewHelpers.GetAmountLabel(Model.BenchmarkData.First().Unit)</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.BenchmarkData.Count; i++)
            {

                var schoolBenchmarkData = Model.BenchmarkData[i];

                <tr>
                    @if (ViewBag.HomeSchoolId == schoolBenchmarkData.Urn)
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight index-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> index school</span>
                            </a>
                            @if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                            {
                                <span class="exc-icon">
                                    <span class="icon dark-blue">
                                        <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                            <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                        </a>
                                    </span>
                                </span>
                            }
                        </td>
                    }
                    else if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteFinance-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete financial data</span>
                            </a>
                            <span class="exc-icon">
                                <span class="icon dark-blue">
                                    <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                        <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                    </a>
                                </span>
                            </span>
                        </td>
                    }
                    else if (ViewBag.ChartGroup == ChartGroupType.Workforce && Model.IncompleteWorkforceDataIndex.Contains(i))
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteWorkforce-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete workforce data</span>
                            </a>
                        </td>
                    }
                    else
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                @schoolBenchmarkData.School
                            </a>
                        </td>
                    }
                    <td data-header="Amount">
                        @if (schoolBenchmarkData.Amount.HasValue)
                        {
                            switch ((UnitType)Enum.Parse(typeof(UnitType), schoolBenchmarkData.Unit))
                            {
                                case UnitType.PercentageOfTotalExpenditure:
                                case UnitType.PercentageOfTotalIncome:
                                case UnitType.PercentageTeachers:
                                case UnitType.FTERatioToTotalFTE:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("F1")<text>%</text>
                                    break;
                                case UnitType.HeadcountPerFTE:
                                case UnitType.AbsoluteCount:
                                case UnitType.NoOfPupilsPerMeasure:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault()
                                    break;
                                default:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("C0")
                                    break;
                            }
                            <span aria-label="@ViewHelpers.GetAmountCellAriaLabel(schoolBenchmarkData.Unit, Model.Name)"></span>
                        }
                        else
                        {
                            <text>Not applicable</text>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <table class="tablesorter data-table-js chart-table chart-table--mobile-only-view chart-table--detail-view" style="display: none">
        @for (int i = 0; i < Model.BenchmarkData.Count; i++)
        {
            <tbody class="chart-table--detail-view__body">
                <tr>
                    @{var schoolBenchmarkData = Model.BenchmarkData[i];}

                    <th scope="row" class="col-header">School name</th>
                    @if (@ViewBag.HomeSchoolId == schoolBenchmarkData.Urn)
                    {
                        <td>
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight index-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> index school</span>
                            </a>
                            @if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                            {
                                <span class="exc-icon">
                                    <span class="icon dark-blue">
                                        <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                            <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                        </a>
                                    </span>
                                </span>
                            }
                        </td>
                    }
                    else if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                    {
                        <td>
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteFinance-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete financial data</span>
                            </a>
                            <span class="exc-icon">
                                <span class="icon dark-blue">
                                    <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                        <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                    </a>
                                </span>
                            </span>
                        </td>
                    }
                    else if (ViewBag.ChartGroup == ChartGroupType.Workforce && Model.IncompleteWorkforceDataIndex.Contains(i))
                    {
                        <td>
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteWorkforce-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete workforce data</span>
                            </a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                @schoolBenchmarkData.School
                            </a>
                        </td>
                    }
                </tr>
                <tr>
                    @if (ViewBag.ComparisonType == ComparisonType.BestInClass)
                    {
                        if (ViewBag.BicComparisonOverallPhase == "Primary")
                        {
                            <th scope="row" class="col-header">
                                KS2 progress
                                <button class="helpLink link-button no-padding hide-in-print" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaKs2Modal(event)">
                                    <img class="help-image" src="/public/assets/images/icons/info.svg" alt="Help">
                                </button>
                            </th>
                            <td>
                                <div class="score chart-table--score @ViewHelpers.ScoreColorCode(schoolBenchmarkData.ProgressScore.GetValueOrDefault(), BicProgressScoreType.KS2, schoolBenchmarkData.P8Banding.GetValueOrDefault())">
                                    <span class="chart-table--score__text">@schoolBenchmarkData.ProgressScore</span>
                                </div>
                            </td>

                        }
                        else if (ViewBag.BicComparisonOverallPhase == "Secondary" || ViewBag.BicComparisonOverallPhase == "All-through")
                        {
                            <th scope="row" class="col-header">
                                Progress 8
                                <button class="helpLink link-button no-padding hide-in-print" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaP8Modal(event)">
                                    <img class="help-image" src="/public/assets/images/icons/info.svg" alt="Help">
                                </button>
                            </th>
                            <td>
                                <div class="score chart-table--score @ViewHelpers.ScoreColorCode(schoolBenchmarkData.ProgressScore.GetValueOrDefault(), BicProgressScoreType.P8, schoolBenchmarkData.P8Banding.GetValueOrDefault())">
                                    <span class="chart-table--score__text">@schoolBenchmarkData.ProgressScore</span>
                                </div>
                            </td>
                        }
                    }
                </tr>
                <tr>
                    <th scope="row" class="col-header">Local authority</th>
                    <td>@schoolBenchmarkData.La</td>
                </tr>
                <tr>
                    <th scope="row" class="col-header">School type</th>
                    <td>@schoolBenchmarkData.Type</td>
                </tr>
                <tr class="col-header">
                    <th scope="row" class="col-header">Pupils</th>
                    <td aria-label="@schoolBenchmarkData.PupilCount pupils">@schoolBenchmarkData.PupilCount</td>
                </tr>
                <tr>
                    <th scope="row" class="col-header">
                        <span aria-label="@ViewHelpers.GetAmountHeaderAriaLabel(Model.BenchmarkData.First().Unit)">@ViewHelpers.GetAmountLabel(Model.BenchmarkData.First().Unit)</span>
                    </th>
                    <td>
                        @if (schoolBenchmarkData.Amount.HasValue)
                        {
                            switch ((UnitType)Enum.Parse(typeof(UnitType), schoolBenchmarkData.Unit))
                            {
                                case UnitType.PercentageOfTotalExpenditure:
                                case UnitType.PercentageOfTotalIncome:
                                case UnitType.PercentageTeachers:
                                case UnitType.FTERatioToTotalFTE:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("F1")<text>%</text>
                                    break;
                                case UnitType.HeadcountPerFTE:
                                case UnitType.AbsoluteCount:
                                case UnitType.NoOfPupilsPerMeasure:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault()
                                    break;
                                default:
                                    @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("C0")
                                    break;
                            }
                            <span aria-label="@ViewHelpers.GetAmountCellAriaLabel(schoolBenchmarkData.Unit, Model.Name)"></span>
                        }
                        else
                        {
                            <text>Not applicable</text>
                        }
                    </td>
                </tr>
            </tbody>
        }

    </table>
</div>

<div>
    <button aria-label="Hide extra columns in @Model.Name table" class="hide-show-button hide detail hide-in-print a-button hide-in-mobile" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)">Show less information</button>
    <button aria-label="Show extra columns in @Model.Name table" class="hide-show-button show detail hide-in-print a-button hide-in-mobile" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)" style="display: none">Show more information</button>

    <table class="tablesorter data-table-js chart-table chart-table--mobile-above-view">
        <thead>
            <tr>
                <th class="school-column sortInitialOrder-asc" scope="col" data-header="School name">
                    School name
                </th>
                @if (ViewBag.ComparisonType == ComparisonType.BestInClass)
                {
                    if (ViewBag.BicComparisonOverallPhase == "Secondary" || ViewBag.BicComparisonOverallPhase == "All-through")
                    {
                        <th class="detail sortInitialOrder-desc" scope="col" data-header="Progress Score">
                            Progress 8
                            <button class="helpLink link-button no-padding hide-in-print" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaP8Modal(event)">
                                <img class="help-image" src="/public/assets/images/icons/info.svg" alt="Help">
                            </button>
                        </th>
                    }
                    else if (ViewBag.BicComparisonOverallPhase == "Primary")
                    {
                        <th class="detail sortInitialOrder-desc" scope="col" data-header="Progress Score">
                            KS2 progress
                            <button class="helpLink link-button no-padding hide-in-print" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaKs2Modal(event)">
                                <img class="help-image" src="/public/assets/images/icons/info.svg" alt="Help">
                            </button>
                        </th>
                    }
                }
                <th class="detail sortInitialOrder-asc" scope="col" data-header="Local authority">Local authority</th>
                <th class="detail sortInitialOrder-asc" scope="col" data-header="School type">School type</th>
                <th class="detail sortInitialOrder-desc" scope="col" data-header="Number of pupils">Number of pupils</th>
                <th class="sortInitialOrder-desc" scope="col" data-header="Amount">
                    <span aria-label="@ViewHelpers.GetAmountHeaderAriaLabel(Model.BenchmarkData.First().Unit)">@ViewHelpers.GetAmountLabel(Model.BenchmarkData.First().Unit)</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.BenchmarkData.Count; i++)
            {

                var schoolBenchmarkData = Model.BenchmarkData[i];

                <tr>
                    @if (ViewBag.HomeSchoolId == schoolBenchmarkData.Urn)
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight index-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> index school</span>
                            </a>
                            @if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                            {
                                <span class="exc-icon">
                                    <span class="icon dark-blue">
                                        <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                            <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                        </a>
                                    </span>
                                </span>
                            }
                        </td>
                    }
                    else if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteFinance-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete financial data</span>
                            </a>
                            <span class="exc-icon">
                                <span class="icon dark-blue">
                                    <a href="#" class="js-modal" data-modal-title="Incomplete financial data" data-modal-text="This school doesn't have a complete set of financial data for this period." data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                                        <span class="visuallyhidden">Open more info text for incomplete financial data. Opens a popup</span>
                                    </a>
                                </span>
                            </span>
                        </td>
                    }
                    else if (ViewBag.ChartGroup == ChartGroupType.Workforce && Model.IncompleteWorkforceDataIndex.Contains(i))
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                <span class="table-highlight incompleteWorkforce-highlight">@schoolBenchmarkData.School</span><span class="visually-hidden"> has incomplete workforce data</span>
                            </a>
                        </td>
                    }
                    else
                    {
                        <td class="school-column" data-header="School name">
                            <a href="/school/detail?urn=@schoolBenchmarkData.Urn" aria-label="Open @schoolBenchmarkData.School's details page" onclick="dataLayer.push({ 'event': 'bmc_school_link_click' });">
                                @schoolBenchmarkData.School
                            </a>
                        </td>
                    }

                    @if (ViewBag.ComparisonType == ComparisonType.BestInClass)
                    {
                        <td class="detail" data-header="Progress Score">
                            <div class="score chart-table--score @ViewHelpers.ScoreColorCode(schoolBenchmarkData.ProgressScore.GetValueOrDefault(), ViewBag.BicComparisonOverallPhase == "Secondary" || ViewBag.BicComparisonOverallPhase == "All-through" ? BicProgressScoreType.P8 : BicProgressScoreType.KS2, schoolBenchmarkData.P8Banding.GetValueOrDefault())">
                                <span class="chart-table--score__text">@schoolBenchmarkData.ProgressScore</span>
                            </div>
                        </td>
                    }

                    <td class="detail" data-header="Local authority">@schoolBenchmarkData.La</td>
                    <td class="detail" data-header="School type">@schoolBenchmarkData.Type</td>
                    <td class="detail" data-header="Number of pupils" aria-label="@schoolBenchmarkData.PupilCount pupils">@schoolBenchmarkData.PupilCount</td>
                    <td data-header="Amount">
                        <span>
                            @if (schoolBenchmarkData.Amount.HasValue)
                            {
                                switch ((UnitType)Enum.Parse(typeof(UnitType), schoolBenchmarkData.Unit))
                                {
                                    case UnitType.PercentageOfTotalExpenditure:
                                    case UnitType.PercentageOfTotalIncome:
                                    case UnitType.PercentageTeachers:
                                    case UnitType.FTERatioToTotalFTE:
                                        @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("F1")<text>%</text>
                                        break;
                                    case UnitType.HeadcountPerFTE:
                                    case UnitType.AbsoluteCount:
                                    case UnitType.NoOfPupilsPerMeasure:
                                        @schoolBenchmarkData.Amount.GetValueOrDefault()
                                        break;
                                    default:
                                        @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("C0")
                                        break;
                                }
                                <span aria-label="@ViewHelpers.GetAmountCellAriaLabel(schoolBenchmarkData.Unit, Model.Name)"></span>
                            }
                            else
                            {
                                <text>Not applicable</text>
                            }
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="post-table-@Model.Name.Replace(" ","")"></div>
