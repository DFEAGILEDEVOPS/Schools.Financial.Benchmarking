@using SFB.Web.UI.Helpers.Enums
@using Microsoft.Ajax.Utilities
@model SFB.Web.UI.Models.ChartViewModel


<table class="tablesorter chart-table">
    <thead>
        <tr>
            <th class="school-column" scope="col" data-header="School name">
                School name
                <a aria-hidden="True" class="hide-show-button hide detail hide-in-print" href="javascript:void(0)" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)">Hide details&#9654;</a>
            </th>
            <th class="detail" scope="col" data-header="Local authority">Local authority</th>
            <th class="detail" scope="col" data-header="School type">School type</th>
            <th class="detail" scope="col" data-header="Number of pupils">Number of pupils</th>
            <th scope="col" data-header="Amount">
                <a aria-hidden="True" class="hide-show-button show detail hide-in-print" href="javascript:void(0)" onclick="DfE.Views.BenchmarkChartsViewModel.HideShowDetails(this)" style="display: none">&#9664;Show details</a>
                <span aria-label="@ViewHelpers.GetAmountAriaLabel(Model.BenchmarkData.First().Unit)">@ViewHelpers.GetAmountLabel(Model.BenchmarkData.First().Unit)</span>
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.BenchmarkData.Count; i++)
        {

            var schoolBenchmarkData = Model.BenchmarkData[i];

            <tr>
                @if (ViewBag.HomeSchoolId == schoolBenchmarkData.Urn)
                {
                    <td class="school-column" data-header="School name">
                        <span class="table-highlight index-highlight">@schoolBenchmarkData.School.SubstringUpToFirst('#')</span><span class="visually-hidden"> index school</span>
                    </td>
                }
                else if (ViewBag.ChartGroup != ChartGroupType.Workforce && Model.IncompleteFinanceDataIndex.Contains(i))
                {
                    <td class="school-column" data-header="School name">
                        <span class="table-highlight incompleteFinance-highlight">@schoolBenchmarkData.School.SubstringUpToFirst('#')</span><span class="visually-hidden"> has incomplete financial data</span>
                    </td>
                }
                else if (ViewBag.ChartGroup == ChartGroupType.Workforce && Model.IncompleteWorkforceDataIndex.Contains(i))
                {
                    <td class="school-column" data-header="School name">
                        <span class="table-highlight incompleteWorkforce-highlight">@schoolBenchmarkData.School.SubstringUpToFirst('#')</span><span class="visually-hidden"> has incomplete workforce data</span>
                    </td>
                }
                else
                {
                    <td class="school-column" data-header="School name">@schoolBenchmarkData.School.SubstringUpToFirst('#')</td>
                }

                <td class="detail" data-header="Local authority">@schoolBenchmarkData.La</td>
                <td class="detail" data-header="School type">@schoolBenchmarkData.Type</td>
                <td class="detail" data-header="Number of pupils">@schoolBenchmarkData.PupilCount</td>
                <td data-header="Amount">
                    @if (schoolBenchmarkData.Amount.HasValue)
                    {
                        switch ((UnitType)Enum.Parse(typeof(UnitType), schoolBenchmarkData.Unit))
                        {
                            case UnitType.PercentageOfTotal:
                            case UnitType.FTERatioToTotalFTE:
                                @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("F1")<text>%</text>
                                break;
                            case UnitType.HeadcountPerFTE:
                            case UnitType.AbsoluteCount:
                            case UnitType.NoOfPupilsPerMeasure:
                                @schoolBenchmarkData.Amount.GetValueOrDefault()
                                break;
                            default:
                                @schoolBenchmarkData.Amount.GetValueOrDefault().ToString("C0")
                                break;
                        }
                    }
                    else
                    {
                        <text>Not applicable</text>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

