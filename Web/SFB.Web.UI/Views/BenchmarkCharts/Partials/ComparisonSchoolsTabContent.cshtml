@model SFB.Web.UI.Models.BenchmarkChartListViewModel

<div id="comparisonSchoolsTabSection" style="display: none">
    <div class="grid-row">
        <div class="column-full">
            <div class="font-xsmall latest-year-message column-full">
               <span>The data below is from the latest year available. For maintained schools this is <span class="bold-xsmall">@Model.LatestTermMaintained</span>, academies from <span class="bold-xsmall">@Model.LatestTermAcademies</span></span>
            </div>
            <table class="tablesorter data-table-js" id="ComparisonSchoolsTable">
                <thead>
                    <tr>
                        <th nowrap scope="col" class="school-column">School</th>
                        <th nowrap class="numeric" scope="col">Pupils</th>
                        <th nowrap class="numeric" scope="col">Phase of education</th>
                        <th nowrap class="numeric" scope="col">Ofsted rating</th>
                        <th class="numeric" scope="col">
                            Key stage 2 progress
                            <button class="helpLink link-button no-padding hide-in-print" id="renderKs2Info" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaKs2Modal(event)">
                                <img class="help-image" src="/public/assets/images/help-icon.png" alt="Help">
                            </button>
                        </th>
                        <th nowrap class="numeric" scope="col">
                            Progress 8
                            <button class="helpLink link-button no-padding hide-in-print" id="renderP8InfoTable" onclick="DfE.Util.ModalRenderer.RenderBicCriteriaP8Modal(event)">
                                <img class="help-image" src="/public/assets/images/help-icon.png" alt="Help">
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bicSchool in Model.ComparisonSchools.OrderByDescending(s => s.ProgressScore))
                    {
                    <tr>
                        <td scope="col" class="school-column">
                            <a href="/school/detail?Urn=@bicSchool.Id" class="@Html.Raw(Model.SchoolComparisonList.HomeSchoolName == bicSchool.Name ? "highlight" : "")"><span>@bicSchool.Name</span></a>
                            @Html.Raw(Model.SchoolComparisonList.HomeSchoolName == bicSchool.Name ? "<span class=\"visually-hidden\"> index school</span>" : "")
                            <div>@bicSchool.Address</div>
                        </td>
                        <td class="numeric" scope="col">@bicSchool.TotalPupils</td>
                        <td class="numeric" scope="col">@bicSchool.OverallPhase</td>
                        <td class="numeric" scope="col">@bicSchool.OfstedRating @bicSchool.OfstedRatingText</td>
                        <td class="numeric no-padding" scope="col">
                            <div class="score @ViewHelpers.ScoreColorCode(bicSchool.ProgressScore.GetValueOrDefault(), ViewBag.BicComparisonOverallPhase)">
                                <div class="font-xsmall">@bicSchool.ProgressScore.GetValueOrDefault().ToString("F2")</div>
                                <div class="no-wrap">@ScoreText(bicSchool.ProgressScore.GetValueOrDefault())</div>
                            </div>
                        </td>
                        <td class="numeric no-padding" scope="col">
                            <div class="score @ViewHelpers.ScoreColorCode(bicSchool.ProgressScore.GetValueOrDefault(), ViewBag.BicComparisonOverallPhase)">
                                <div class="font-xsmall">@bicSchool.ProgressScore.GetValueOrDefault().ToString("F2")</div>
                                <div class="no-wrap">@ScoreText(bicSchool.ProgressScore.GetValueOrDefault())</div>
                            </div>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@helper ScoreText(decimal score)
{
    if (ViewBag.BicComparisonOverallPhase == "Secondary")
    {
        if (score < -0.5m)
        {
            @("Well below average")
        }
        else if (score >= -0.5m && score < -0.25m)
        {
            @("Below average")
        }
        else if (score >= -0.25m && score <= 0.25m)
        {
            @("Average")
        }
        else if (score > 0.25m && score <= 0.5m)
        {
            @("Above average")
        }
        else if (score > 0.5m)
        {
            @("Well above average")
        }
    }
    else
    {
        if (score < -3m)
        {
            @("Well below average")
        }
        else if (score >= -3m && score < -2m)
        {
            @("Below average")
        }
        else if (score >= -2m && score <= 2m)
        {
            @("Average")
        }
        else if (score > 2m && score <= 3m)
        {
            @("Above average")
        }
        else if (score > 3m)
        {
            @("Well above average")
        }
    }
}

