@using SFB.Web.Common
@using SFB.Web.Domain.Helpers
@using SFB.Web.UI.Helpers.Enums
@using SFB.Web.UI.Models
@model EstablishmentViewModelBase

<div id="historical-charts-accordion" class="accordion">
    @for (var index = 0; index < Model.HistoricalCharts.Count; index++)
    {
        var historicalChart = Model.HistoricalCharts[index];
        historicalChart.Id = index.ToString();
        ViewBag.FinancialYear = Model.FinancialType == SchoolFinancialType.Academies ? historicalChart.LastYear : historicalChart.LastYear.Replace('/', '-');

        <div class="chartContainer column-full" data-group="@historicalChart.ChartGroup">
            @if (historicalChart.ChartType == ChartType.Total)
            {

                if (historicalChart.DrillInto != null)
                {
                    <div class="chart-header hide-in-print">
                        <h2 class="heading-medium inline">@historicalChart.Name</h2>
                        <a class="inline" href="javascript:void(0)" onclick="DfE.Views.HistoricalCharts.SelectGrouping('@historicalChart.DrillInto')">View more charts<span class="visuallyhidden"> for @historicalChart.Name</span> </a>
                    </div>
                }
                else
                {
                    <h2 class="heading-medium">@historicalChart.Name</h2>
                }

                @Html.Partial("Partials/HistoricalChart", historicalChart)
            }
            else
            {
                <div class="accordion-section">
                    <fieldset role="group">
                        <legend class="hidden">@historicalChart.Name</legend>
                        <div class="accordion-section-header">
                            <h2 class="heading-medium chart-accordion-header" aria-label="@historicalChart.Name Show section">@historicalChart.Name</h2>
                        </div>

                        <div class="accordion-section-body">
                            @Html.Partial("Partials/HistoricalChart", historicalChart)
                            @if (historicalChart.SubCharts != null)
                            {
                                for (var i = 0; i < historicalChart.SubCharts.Count; i++)
                                {
                                    ChartViewModel subChart = historicalChart.SubCharts[i];
                                    subChart.Id = $"{index}_{i}";
                                    <h2 class="heading-medium">@subChart.Name</h2>
                                    @Html.Partial("Partials/HistoricalChart", subChart)
                                }
                            }
                        </div>
                    </fieldset>
                </div>
            }
        </div>
    }
</div>

<input type="hidden" id="expTotal" value="@Model.TotalRevenueExpenditure.FormatMoney()" />
<input type="hidden" id="expTotalAbbr" value="@Model.TotalRevenueExpenditure.ToString("C0")" />
<input type="hidden" id="incTotal" value="@Model.TotalRevenueIncome.FormatMoney()" />
<input type="hidden" id="incTotalAbbr" value="@Model.TotalRevenueIncome.ToString("C0")" />
<input type="hidden" id="balTotal" value="@Model.InYearBalance.FormatMoney()" />
<input type="hidden" id="balTotalAbbr" value="@Model.InYearBalance.ToString("C0")" />

@if (Request.IsAjaxRequest())
{
    <script src="/public/scripts/termi/element.details.ajax.js"></script>
}

@helper FormatFinancialYear(string year, SchoolFinancialType schoolType)
{ @( schoolType == SchoolFinancialType.Academies ? year : year.Replace('/', '-')) }