@model SFB.Web.UI.Models.BenchmarkCriteriaRangeVM

@{
    var activated = Model.MinValue.HasValue || Model.MaxValue.HasValue;
}

<div class="question">
    <div class="multiple-choice question">
        <input id="checkbox-@Model.MinElementName" type="checkbox" @Html.Raw(activated ? "checked" : "")>
        <label for="checkbox-@Model.MinElementName">@Model.Question <span class="visuallyhidden">Enter your preferred range in the boxes below. The value for @Model.HomeSchoolName is @Model.HomeSchoolValue</span></label>
    </div>
    <div class="panel panel-border-narrow" style="display: @Html.Raw(activated ? "block": "none")">
        <div class="column-full">
            <div class="benchmark-school-value">
                @if (string.IsNullOrEmpty(Model.HomeSchoolValue))
                {
                    if (!@Model.HomeSchoolName.IsEmpty())
                    {
                        <span>No value was supplied for @Model.HomeSchoolName</span>
                    }
                }
                else
                {
                    <span>Enter your preferred range in the boxes below. The value for @Model.HomeSchoolName is </span>

                    decimal homeValueDecimal;
                    if (!string.IsNullOrEmpty(Model.Format) && decimal.TryParse(Model.HomeSchoolValue, out homeValueDecimal))
                    {
                        <span class="bold-small">@homeValueDecimal.ToString(Model.Format)</span>
                    }
                    else
                    {
                        <span class="bold-small">@Model.HomeSchoolValue</span>
                    }
                }
            </div>
        </div>
        <div>
            <span class="error-message"></span>
        </div>
        <div class="column-half">
            <div class="form-group">
                <div class="column-half">
                    <label class="form-label" for="@Model.MinElementName">From</label>
                    <input value="@Model.MinValue" type="number" name="AdvancedCriteria.@Model.MinElementName" id="@Model.MinElementName" class="form-control criteria-input min-js"
                           min="@Model.MinLimit.GetValueOrDefault()" max="@Model.MaxLimit.GetValueOrDefault()" @Html.Raw(activated ? "" : "disabled") 
                           data-msg-minLowerThanMax="'From' value can not be greater than the 'To' value"
                           data-msg-minOrMaxRequired="Fill in at least one of the boxes if you want this characteristic to be included in the search."
                           aria-label="Minimum value for @Model.Question">
                </div>
                <div class="column-half">
                    <label class="form-label" for="@Model.MaxElementName">To</label>
                    <input value="@Model.MaxValue" type="number" name="AdvancedCriteria.@Model.MaxElementName" id="@Model.MaxElementName" class="form-control criteria-input max-js"
                           min="@Model.MinLimit.GetValueOrDefault()" max="@Model.MaxLimit.GetValueOrDefault()" @Html.Raw(activated ? "" : "disabled") 
                           data-msg-maxGreaterThanMin="'To' value can not be lower than the 'From' value"
                           data-msg-minOrMaxRequired="Fill in at least one of the boxes if you want this characteristic to be included in the search."
                           aria-label="Maximum value for @Model.Question">
                </div>
            </div>
        </div>
    </div>
</div>

