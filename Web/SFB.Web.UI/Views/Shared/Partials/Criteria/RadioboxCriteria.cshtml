@model SFB.Web.UI.Models.BenchmarkCriteriaMultipleChoiceVM

@{
    var activated = Model.Options.Any(o => o.Selected);
}

<div class="govuk-checkboxes question" data-module="govuk-checkboxes">
    <div class="govuk-checkboxes__item question">
        <input class="govuk-checkboxes__input" id="checkbox-@Model.ElementName" type="checkbox" @Html.Raw(activated ? "checked" : "") data-aria-controls="rbc">
        <label class="govuk-label govuk-checkboxes__label" for="checkbox-@Model.ElementName">@Model.Question <span class="visuallyhidden">The value for @Model.HomeSchoolName is @Model.HomeSchoolValue</span></label>
    </div>
    <div class="govuk-checkboxes__conditional govuk-checkboxes__conditional--hidden" id="rbc">
        <div class="govuk-form-group">
            <fieldset class="govuk-fieldset">
                <div class="govuk-hint">
                    @if (string.IsNullOrEmpty(Model.HomeSchoolValue))
                    {
                        if (!@Model.HomeSchoolName.IsEmpty())
                        {
                            <span>No value was supplied for @Model.HomeSchoolName</span>
                        }
                    }
                    else
                    {
                        <span>The value for @Model.HomeSchoolName is <span class="bold-small">@Model.HomeSchoolValue</span></span>
                    }
                </div>

                <span class="govuk-error-message"></span>

                <legend class="govuk-visually-hidden">@Model.Question</legend>

                <div class="govuk-radios" data-module="govuk-radios">
                    @for (var i = 0; i < Model.Options.Count; i++)
                    {

                        <div class="govuk-radios__item">
                            <input type="radio" name="AdvancedCriteria.@Model.ElementName" id="@Model.ElementName@i" value="@Model.Options[i].Value"
                                   class="govuk-radios__input criteria-radio"
                                   required @Html.Raw(Model.Options.Any(o => o.Selected) ? "" : "disabled") @Html.Raw(Model.Options[i].Selected ? "checked" : "") data-msg-required="Choose an option to continue the comparison">
                            <label class="govuk-label selection-button-radio" for="@Model.ElementName@i">@Model.Options[i].Name</label>
                        </div>

                        if (Model.Options[i].SubRangeOptions != null)
                        {
                            <div class="govuk-inset-text app-govuk-inset-text--criteria" style="display: @Html.Raw(activated ? "inline-block": "none")">
                                @foreach (var subOption in Model.Options[i].SubRangeOptions.SubOptions)
                                {
                                    @Html.Partial("Partials/Criteria/RangeCriteria", subOption)
                                }
                            </div>
                        }
                    }
                </div>
            </fieldset>
        </div>
    </div>
</div>

