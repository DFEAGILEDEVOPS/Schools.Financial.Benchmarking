@using SFB.Web.UI.Models
@model SFB.Web.UI.Models.SearchedSchoolListViewModel

<div id="result-list">
    <div id="js-search-results-info">
        <div class="result-info">
            <p class="summary count-summary font-xsmall">
                <span class="bold-xsmall result-count">@(Model.Pagination.Total)</span> schools found
            </p>
        </div>
    </div>
</div>

@if (Model.ModelList.Count > 0)
{
    <ul>
        @foreach (var school in Model.ModelList)
        {
            <li class="school-document">
                <div class="grid-row">
                    <div class="column-two-thirds">
                        <a href="/school/detail?urn=@school.Id" class="bold-small">
                            @school.Name
                        @if (school.Status == "Closed")
                        {
                            <span> (Closed)</span>
                        }
                        </a>
                        <div class="school-document__add-to-compare-button school-document__add-to-compare-button--add-remove-mobile">
                            @AddRemoveButton(school, "mobile")
                        </div>
                        <ul class="metadata">
                            <li>@school.Address</li>
                            <li>@school.OverallPhase<span> (@school.TotalPupils pupils)</span></li>
                            <li>@school.Type</li>
                            @if (!string.IsNullOrEmpty(school.OfstedRatingText))
                            {
                                <li>Ofsted rating: <span class="rating rating-@school.OfstedRating"><span class="rating-text">@school.OfstedRating</span></span> @school.OfstedRatingText</li>
                            }
                        </ul>
                    </div>
                    <div class="school-document__add-to-compare-button school-document__add-to-compare-button--add-remove-desktop">
                        @AddRemoveButton(school, "desktop")
                    </div>
                </div>
            </li>
        }
    </ul>

        @Html.Partial("Partials/Pagination", Model.Pagination)
}
else
{
    <p class="bold-small" style="margin-top: 22px;">Please try:</p>
        <p class="indent">
            • <a href="/">searching again</a> using different spelling or words
        </p>
        <p class="indent">
            • removing your filters
        </p>
}

<input type="hidden" id="SearchMethod" value="@ViewBag.SearchMethod" />

@helper AddRemoveButton(SchoolSearchResultViewModel school, string device)
{
    if (!school.IsSixthForm)
    {
        string status = school.Status == "Open" ? "" : "Closed";
        string deviceLabel = device == "desktop" ? "" : "mobile";
<div id="@school.Id@device" data-urn="@school.Id">
    @if (ViewBag.SearchMethod == "Manual")
    {
        <button @DisplayStyle(Model.SchoolComparisonList.BenchmarkSchools.Any(s => s.Urn == school.Id)) class='button add-remove @device-button removefrom' data-urn="@school.Id" onclick="DfE.Views.SchoolsResultsViewModel.updateManualBasket(@school.Id,'Remove')" aria-label="Remove @status @school.Name from basket @deviceLabel">Remove</button>
        <button @DisplayStyle(Model.SchoolComparisonList.BenchmarkSchools.All(s => s.Urn != school.Id)) class='button add-remove @device-button addto' data-urn="@school.Id" onclick="DfE.Views.SchoolsResultsViewModel.updateManualBasket(@school.Id,'Add')" aria-label="Add @status @school.Name to basket @deviceLabel">Add</button>              
        <a class="hidden-goto-basket" href="/manualcomparison/overwritestrategy" style="display: @(ViewBag.manualCount > 1 ? "block" : "none")" aria-label="Continue to benchmark charts with @ViewBag.manualCount schools selected">Continue to benchmark charts</a>       
    }
    else
    {
        <button @DisplayStyle(Model.SchoolComparisonList.BenchmarkSchools.Any(s => s.Urn == school.Id)) class='button add-remove @device-button removefrom' data-urn="@school.Id" onclick="DfE.Views.SchoolsResultsViewModel.updateBenchmarkBasket(@school.Id,'Remove')" aria-label="Remove @status @school.Name from basket @deviceLabel">Remove</button>
        <button @DisplayStyle(Model.SchoolComparisonList.BenchmarkSchools.All(s => s.Urn != school.Id)) class='button add-remove @device-button addto' data-urn="@school.Id" onclick="DfE.Views.SchoolsResultsViewModel.updateBenchmarkBasket(@school.Id,'Add')" aria-label="Add @status @school.Name to basket @deviceLabel">Add</button>
        <a class="hidden-goto-basket" href="/benchmarklist">Go to your benchmark basket</a>
    }
</div>
    }
}

@helper DisplayStyle(bool display)
{
if (display)
{
        @Html.Raw("style=\"display: inline-block\"");
    }
    else
    {
        @Html.Raw("style=\"display: none\"");
    }
}


