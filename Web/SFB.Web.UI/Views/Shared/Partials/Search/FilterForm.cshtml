@using SFB.Web.UI.Helpers.Constants
@model SFB.Web.UI.Models.SearchedSchoolListViewModel

<div id="EditSearchCollapse" aria-expanded="true">
    
    @{ 
        var action = ViewBag.SearchMethod == "Manual" ? "ManualComparison" :
            Model.SearchType == SearchTypes.SEARCH_BY_MAT ? "TrustSchoolSearch" : "SchoolSearch";
    }

    <form id="SearchFacetsForm" method="get" action="/@(action)/Search" class="js-live-search-form">
        <div class="grid-row mvs pvl filter-header">
            <div class="column-full">
                <nav>Filter by:</nav>
            </div>
        </div>
        @if (Request.QueryString["searchtype"] == SearchTypes.SEARCH_BY_LOCATION)
        {
            var distanceRadius = new[] { 1, 3, 5, 10, 15, 20, 25 };

            <div class="filter school @(ViewBag.tab == "map" ? "active" : string.Empty)">
                <div class="form-group filter-box">
                    <label class="legend" for="DistanceRadius">Within a radius of <span class="visuallyhidden">- changing the selection will refresh the results</span></label>
                    <select id="DistanceRadius" name="radius" aria-controls="js-search-results-info" class="select">
                        @foreach (var radius in distanceRadius)
                        {
                            <option @((Request.QueryString["radius"] == radius.ToString() || (Request.QueryString["radius"] == null && radius == SearchDefaults.LOCATION_SEARCH_DISTANCE)) ? "selected" : "") value="@(radius)">
                                @(radius) @(radius == 1 ? "mile" : "miles")
                            </option>
                        }
                    </select>
                </div>

            </div>

            <div class="filter-divider"></div>
        }
        @if (Model.Filters != null)
        {
            foreach (var filter in Model.Filters)
            {
                @Html.Partial("Partials/Search/OptionSelect", filter)
                <div class="filter-divider"></div>
            }
        }


        @if (Request.QueryString["nameId"] != null)
        {
            <input type="hidden" name="nameId" value="@(Request.QueryString["nameId"])" />
        }

        @if (Request.QueryString["searchtype"] != null)
        {
            <input type="hidden" name="searchtype" value="@(Request.QueryString["searchtype"])" />
        }

        @if (Request.QueryString["LocationCoordinates"] != null)
        {
            <input type="hidden" name="LocationCoordinates" value="@(Request.QueryString["LocationCoordinates"])" />
        }

        @if (Request.QueryString["locationorpostcode"] != null)
        {
            <input type="hidden" name="locationorpostcode" value="@(Request.QueryString["locationorpostcode"])" />
        }

        @if (Request.QueryString["lacodename"] != null)
        {
            <input type="hidden" name="lacodename" value="@(Request.QueryString["lacodename"])" />
        }

        @if (Request.QueryString["companyNo"] != null)
        {
            <input type="hidden" name="companyNo" value="@(Request.QueryString["companyNo"])" />
        }

        @if (Request.QueryString["matname"] != null)
        {
            <input type="hidden" name="matname" value="@(Request.QueryString["matname"])" />
        }

        <input type="hidden" name="orderby" id="OrderBy" value="@(Request.QueryString["orderby"])">

        <input type="hidden" name="openOnly" id="OpenOnly" value="@(Request.QueryString["openOnly"])">

        <input type="hidden" name="selectionState" value="@(Model.FilterSelectionState)" />

        <button type="submit" class="hidden" disabled="disabled">hidden</button>
    </form>
</div>