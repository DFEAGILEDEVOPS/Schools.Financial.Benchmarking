@model SFB.Web.UI.Models.BenchmarkCriteriaMultipleChoiceVM

@{
    var activated = Model.Options.Any(o => o.Selected);
}
<div class="question">
    <div class="multiple-choice question">
        <input id="checkbox-@Model.ElementName" type="checkbox" @Html.Raw(activated ? "checked": "")>
        <label for="checkbox-@Model.ElementName">@Model.Question</label>
    </div>
    <div class="panel panel-border-narrow" style="display: @Html.Raw(activated ? "block": "none")">
        <div class="column-full">
            <div class="benchmark-school-value">
            @if (string.IsNullOrEmpty(Model.HomeSchoolValue))
            {
                <span>Your default school's value was not supplied</span>
            }
            else
            {
                <span>Your default school's value is <span class="bold-small">@Model.HomeSchoolValue</span></span>
            }
            </div>
        </div>
        <div>
            <span class="error-message"></span>
        </div>
        <div class="column-full">
            <div class="form-group">
                <div class="column-full">
                    @foreach (var option in Model.Options)
                    {
                        <div class="multiple-choice">
                            <input type="checkbox" name="AdvancedCriteria.@Model.ElementName" id="@Model.ElementName.@option.Name" value="@option.Value" class="criteria-checkbox"
                                   required @Html.Raw(activated ? "": "disabled") @Html.Raw(option.Selected ? "checked": "")>
                            <label for="@Model.ElementName.@option.Name">@option.Name</label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

