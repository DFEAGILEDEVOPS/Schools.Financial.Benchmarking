@using SFB.Web.UI.Helpers.Constants
@using SFB.Web.UI.Models
@model SchoolComparisonListModel

@{
    ViewBag.Title = "Benchmark set";
    ViewBag.pageClass = "benchmark-list";
}

@section BackButtonContent{
    @{
        var link = Request.QueryString["referrer"] ?? "/";
        if (link.ToLower().Contains("/benchmarkcharts"))
        {
            link = "/BenchmarkCharts";
        }
        <a class="govuk-back-link hide-in-print" href="@link">Back</a>
    }
}

@if (Model.HasIncompleteFinancialData)
{
    <div class="govuk-inset-text app-govuk-inset-text--orange mt-1">
        <div class="combined-warnings">
            <div class="govuk-warning-text">
                <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                <strong class="govuk-warning-text__text">
                    <span class="govuk-warning-text__assistive">Warning</span>
                    Some schools have data from a period less than 12 months
                </strong>
            </div>
        </div>
    </div>
}

<h1 class="govuk-heading-xl page-heading">Benchmark set</h1>

<div id="benchmarkBasketControlsPlaceHolder">
    @Html.Partial("Partials/BenchmarkBasketControls")
</div>

<div id="benchmarkBasketLoadingPlaceHolder"></div>

<ul>
    @foreach (var school in Model.BenchmarkSchools)
    {
        <li class="document" id="doc_@school.Urn">
            <div class="grid-row">
                <div class="column-half">
                    @if (!school.IsReturnsComplete)
                    {
                        <div class="name highlight-warning">
                            <a href="/school/detail?urn=@school.Urn" class="govuk-!-font-size-19 govuk-!-font-weight-bold">@school.Name<span class="govuk-visually-hidden"> (has incomplete data)</span></a>
                        </div>
                        <span class="help-icon inline-block hide-in-print">
                            <span class="icon dark-blue">
                                <a href="#" class="js-modal" role="button" data-modal-title="Incomplete financial data" data-modal-text="<p id='modal-content'>This school doesn't have a complete set of financial data for this period.</p>" data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="" id="label_modal_1">
                                    <span class="govuk-visually-hidden">Open incomplete financial modal. Opens a popup</span>
                                </a>
                            </span>
                        </span>
                    }
                    else
                    {
                        if (school.Urn != Model.HomeSchoolUrn)
                        {
                            <div class="name">
                                <a href="/school/detail?urn=@school.Urn" class="govuk-!-font-size-19 govuk-!-font-weight-bold">@school.Name<span class="govuk-visually-hidden"></span></a>
                            </div>
                        }
                        else
                        {
                            <div class="name highlight">
                                <a href="/school/detail?urn=@school.Urn" class="govuk-!-font-size-19 govuk-!-font-weight-bold">@school.Name<span class="govuk-visually-hidden"> (default school)</span></a>
                            </div>
                        }
                    }
                    <ul class="metadata">
                        <li>@school.Address</li>
                        <li>@school.Phase</li>
                        <li>@school.Type</li>
                    </ul>
                </div>
                <div class="column-half make-benchmark">
                    <div class="default-benchmark column-three-quarters right-padding" data-urn="@school.Urn">
                        @DefaultButton(school)
                    </div>
                    <div class="remove-benchmark column-quarter no-padding">
                        <button class="govuk-button govuk-button--secondary removefrom" data-module="govuk-button" onclick="@( $"DfE.Views.BenchmarkListViewModel.updateBenchmarkBasket({school.Urn},'Remove')")"
                                aria-label="Remove @school.Name from benchmark">
                            Remove
                        </button>
                    </div>
                </div>
            </div>
        </li>
    }
</ul>

@if (Model.BenchmarkSchools.Count > 1)
{
    <div class="view-button-bottom">
        <button class="govuk-button view-benchmark" data-module="govuk-button" onclick="javascript: window.open('/BenchmarkCharts', '_self')">View benchmarking charts</button>
    </div>
}

<a href="#pagetop" class="govuk-link page-top hide-in-print">Top of page</a>


@helper DefaultButton(BenchmarkSchoolModel school)
{
    <button @DisplayStyle(Model.HomeSchoolUrn != school.Urn) id="btn_add_@school.Urn" class="add-remove add defaultBenchmark link-button govuk-!-font-size-16" onclick="@( $"DfE.Views.BenchmarkListViewModel.updateBenchmarkBasket({school.Urn},'SetDefault')")"
            aria-label="Use @school.Name as default school">
        Use as your school
    </button>
    <button @DisplayStyle(Model.HomeSchoolUrn == school.Urn) id="btn_remove_@school.Urn" class="add-remove remove defaultBenchmark link-button govuk-!-font-size-16" onclick="@( $"DfE.Views.BenchmarkListViewModel.updateBenchmarkBasket({school.Urn},'UnsetDefault')")"
            aria-label="Remove @school.Name as default school">
        Remove as your school
    </button>
}

@helper DisplayStyle(bool display)
{
    if (display)
    {
        @Html.Raw("style=\"display: inline-block\"")
    }
    else
    {
        @Html.Raw("style=\"display: none\"")
    }
}

@section ViewScripts {
    <script>
        DfE.Views.BenchmarkListViewModel = new BenchmarkListViewModel();
    </script>
}