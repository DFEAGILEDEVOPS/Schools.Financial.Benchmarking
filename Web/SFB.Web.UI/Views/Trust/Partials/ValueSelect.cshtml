@using SFB.Web.UI.Helpers.Constants
@using SFB.Web.UI.Helpers.Enums

<div class="govuk-grid-column-one-third chart-filter govuk-!-padding-0">
    <div class="govuk-form-group">
        <label class="govuk-label govuk-!-display-inline-block" for="ShowValue">Show value</label>
        @if (Model.Tab == TabType.Workforce)
        {
            <span class="help-icon inline-block hide-in-print">
                <span class="icon dark-blue">
                    <a href="#" class="js-modal" role="button" data-modal-title="Show value" data-modal-text="@HelpTooltipText.ShowValueHelp" data-modal-close-text="Close" data-modal-close-title="Close" data-help-text-key="">
                        <span class="govuk-visually-hidden">Open more info text for Show Value opens a popup</span>
                    </a>
                </span>
            </span>
        }
        <select name="ShowValue" id="ShowValue" class="govuk-select" onchange="DfE.Views.HistoricalCharts.rebuildCharts('trust')">
            <option value="@UnitType.AbsoluteMoney" @IsSelected(UnitType.AbsoluteMoney)="selected">@ChartShowValues.ABSOLUTE</option>
            <option value="@UnitType.PerPupil" @IsSelected(UnitType.PerPupil)>@ChartShowValues.PER_PUPIL</option>
            <option value="@UnitType.PerTeacher" @IsSelected(UnitType.PerTeacher)>@ChartShowValues.PER_TEACHER</option>
            <option value="@UnitType.PercentageOfTotalExpenditure" @IsSelected(UnitType.PercentageOfTotalExpenditure)>@ChartShowValues.PERCENTAGE_TOTAL_EXPENDITURE</option>
            <option value="@UnitType.PercentageOfTotalIncome" @IsSelected(UnitType.PercentageOfTotalIncome)>@ChartShowValues.PERCENTAGE_TOTAL_INCOME</option>
        </select>
    </div>
</div>

@helper IsSelected(UnitType option)
{
if (option == Enum.Parse(typeof(UnitType), ViewBag.UnitType.ToString()))
{
        <text>selected</text>
}
}