function RGBColor(t) { this.ok = !1, "#" == t.charAt(0) && (t = t.substr(1, 6)), t = (t = t.replace(/ /g, "")).toLowerCase(); var e = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "00ffff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000000", blanchedalmond: "ffebcd", blue: "0000ff", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "00ffff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgreen: "006400", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dodgerblue: "1e90ff", feldspar: "d19275", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "ff00ff", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", green: "008000", greenyellow: "adff2f", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgrey: "d3d3d3", lightgreen: "90ee90", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslateblue: "8470ff", lightslategray: "778899", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "00ff00", limegreen: "32cd32", linen: "faf0e6", magenta: "ff00ff", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370d8", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "d87093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", red: "ff0000", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", violetred: "d02090", wheat: "f5deb3", white: "ffffff", whitesmoke: "f5f5f5", yellow: "ffff00", yellowgreen: "9acd32" }; for (var i in e) t == i && (t = e[i]); for (var n = [{ re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/, example: ["rgb(123, 234, 45)", "rgb(255,234,245)"], process: function (t) { return [parseInt(t[1]), parseInt(t[2]), parseInt(t[3])] } }, { re: /^(\w{2})(\w{2})(\w{2})$/, example: ["#00ff00", "336699"], process: function (t) { return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)] } }, { re: /^(\w{1})(\w{1})(\w{1})$/, example: ["#fb0", "f0f"], process: function (t) { return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)] } }], a = 0; a < n.length; a++) { var r = n[a].re, s = n[a].process, o = r.exec(t); o && (channels = s(o), this.r = channels[0], this.g = channels[1], this.b = channels[2], this.ok = !0) } this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b, this.toRGB = function () { return "rgb(" + this.r + ", " + this.g + ", " + this.b + ")" }, this.toHex = function () { var t = this.r.toString(16), e = this.g.toString(16), i = this.b.toString(16); return 1 == t.length && (t = "0" + t), 1 == e.length && (e = "0" + e), 1 == i.length && (i = "0" + i), "#" + t + e + i }, this.getHelpXML = function () { for (var t = new Array, i = 0; i < n.length; i++)for (var a = n[i].example, r = 0; r < a.length; r++)t[t.length] = a[r]; for (var s in e) t[t.length] = s; var o = document.createElement("ul"); o.setAttribute("id", "rgbcolor-examples"); for (i = 0; i < t.length; i++)try { var l = document.createElement("li"), h = new RGBColor(t[i]), u = document.createElement("div"); u.style.cssText = "margin: 3px; border: 1px solid black; background:" + h.toHex() + "; color:" + h.toHex(), u.appendChild(document.createTextNode("test")); var c = document.createTextNode(" " + t[i] + " -> " + h.toRGB() + " -> " + h.toHex()); l.appendChild(u), l.appendChild(c), o.appendChild(l) } catch (t) { } return o } } !function () { var t = "undefined" != typeof exports && exports || "undefined" != typeof define && {} || this; function e(t) { if (!((e = t) instanceof HTMLElement || e instanceof SVGElement)) throw new Error("an HTMLElement or SVGElement is required; got " + t); var e } function i(t, e, i) { for (var n = e.selectorRemap, a = e.modifyStyle, r = "", s = [], o = document.styleSheets, l = 0; l < o.length; l++) { try { var h = o[l].cssRules } catch (t) { console.warn("Stylesheet could not be loaded: " + o[l].href); continue } if (null != h) for (var u, c = 0; c < h.length; c++ , u = null) { var f = h[c]; if (void 0 !== f.style) { var d; try { d = f.selectorText } catch (t) { console.warn('The following CSS rule has an invalid selector: "' + f + '"', t) } try { d && (u = t.querySelector(d) || t.parentNode && t.parentNode.querySelector(d)) } catch (t) { console.warn('Invalid CSS selector "' + d + '"', t) } if (u) { var m = n ? n(f.selectorText) : f.selectorText, p = a ? a(f.style.cssText) : f.style.cssText; r += m + " { " + p + " }\n" } else if (f.cssText.match(/^@font-face/)) { var g = /url\(["']?(.+?)["']?\)/, y = f.cssText.match(g), v = y && y[1] || ""; v.match(/^data:/) && (v = ""), "about:blank" === v && (v = ""), v ? (v.startsWith("../") ? v = o[l].href + "/../" + v : v.startsWith("./") && (v = o[l].href + "/." + v), s.push({ text: f.cssText, fontUrlRegexp: g, format: b(v), url: v })) : r += f.cssText + "\n" } } } } function b(t) { for (var e = { woff2: "font/woff2", woff: "font/woff", otf: "application/x-font-opentype", ttf: "application/x-font-ttf", eot: "application/vnd.ms-fontobject", sfnt: "application/font-sfnt", svg: "image/svg+xml" }, i = Object.keys(e), n = 0; n < i.length; ++n) { var a = i[n]; if (t.indexOf("." + a) > 0) return e[a] } return console.error("Unknown font format for " + t + "; Fonts may not be working correctly"), "application/octet-stream" } function x(t) { if (t.length > 0) { var e = t.pop(); n(e) } else { i(r) } function n(e) { var i = new XMLHttpRequest; function n() { var t, n = w(i.response); s(e, n) } function a(i) { console.warn("Failed to load font from: " + e.url); console.warn(i); r += e.text + "\n"; x(t) } function s(e, i) { var n = 'url("data:' + e.format + ";base64," + i + '")'; r += e.text.replace(e.fontUrlRegexp, n) + "\n", setTimeout(function () { x(t) }, 0) } i.addEventListener("load", n), i.addEventListener("error", a), i.addEventListener("abort", a), i.open("GET", e.url), i.responseType = "arraybuffer", i.send() } } function w(t) { for (var e = "", i = new Uint8Array(t), n = i.byteLength, a = 0; a < n; a++) { e += String.fromCharCode(i[a]) } return window.btoa(e) } !function (t) { if (t.length > 0) { var e = t.pop(); !function (e) { var i = new XMLHttpRequest; function n(i) { console.warn("Failed to load font from: " + e.url), console.warn(i), r += e.text + "\n", x(t) } i.addEventListener("load", function () { var n = function (t) { for (var e = "", i = new Uint8Array(t), n = i.byteLength, a = 0; a < n; a++)e += String.fromCharCode(i[a]); return window.btoa(e) }(i.response); !function (e, i) { var n = 'url("data:' + e.format + ";base64," + i + '")'; r += e.text.replace(e.fontUrlRegexp, n) + "\n", setTimeout(function () { x(t) }, 0) }(e, n) }), i.addEventListener("error", n), i.addEventListener("abort", n), i.open("GET", e.url), i.responseType = "arraybuffer", i.send() }(e) } else i(r) }(s) } function n(t, e, i) { var n = t.viewBox && t.viewBox.baseVal && t.viewBox.baseVal[i] || null !== e.getAttribute(i) && !e.getAttribute(i).match(/%$/) && parseInt(e.getAttribute(i)) || t.getBoundingClientRect()[i] || parseInt(e.style[i]) || parseInt(window.getComputedStyle(t).getPropertyValue(i)); return null == n || isNaN(parseFloat(n)) ? 0 : n } function a(t) { for (var e = window.atob(t.split(",")[1]), i = t.split(",")[0].split(":")[1].split(";")[0], n = new ArrayBuffer(e.length), a = new Uint8Array(n), r = 0; r < e.length; r++)a[r] = e.charCodeAt(r); return new Blob([n], { type: i }) } t.prepareSvg = function (t, a, r) { e(t), (a = a || {}).scale = a.scale || 1, a.responsive = a.responsive || !1; var s = "http://www.w3.org/2000/xmlns/"; !function (t, i) { e(t); var n = t.querySelectorAll("image"), a = n.length, r = function () { 0 === a && i() }; r(); for (var s = 0; s < n.length; s++)!function (t) { var e = t.getAttributeNS("http://www.w3.org/1999/xlink", "href"); if (e && (i = e.value) && 0 == i.lastIndexOf("http", 0) && -1 == i.lastIndexOf(window.location.host)) console.warn("Cannot render embedded images linking to external hosts: " + e.value); else { var i, n = document.createElement("canvas"), s = n.getContext("2d"), o = new Image; o.crossOrigin = "anonymous", (e = e || t.getAttribute("href")) ? (o.src = e, o.onload = function () { n.width = o.width, n.height = o.height, s.drawImage(o, 0, 0), t.setAttributeNS("http://www.w3.org/1999/xlink", "href", n.toDataURL("image/png")), a-- , r() }, o.onerror = function () { console.log("Could not load " + e), a-- , r() }) : (a-- , r()) } }(n[s]) }(t, function () { var e, o, l = document.createElement("div"), h = t.cloneNode(!0); if ("svg" == t.tagName) e = a.width || n(t, h, "width"), o = a.height || n(t, h, "height"); else { if (!t.getBBox) return void console.error("Attempted to render non-SVG element", t); var u = t.getBBox(); e = u.x + u.width, o = u.y + u.height, h.setAttribute("transform", h.getAttribute("transform").replace(/translate\(.*?\)/, "")); var c = document.createElementNS("http://www.w3.org/2000/svg", "svg"); c.appendChild(h), h = c } h.setAttribute("version", "1.1"), h.getAttribute("xmlns") || h.setAttributeNS(s, "xmlns", "http://www.w3.org/2000/svg"), h.getAttribute("xmlns:xlink") || h.setAttributeNS(s, "xmlns:xlink", "http://www.w3.org/1999/xlink"), a.responsive ? (h.removeAttribute("width"), h.removeAttribute("height"), h.setAttribute("preserveAspectRatio", "xMinYMin meet")) : (h.setAttribute("width", e * a.scale), h.setAttribute("height", o * a.scale)), h.setAttribute("viewBox", [a.left || 0, a.top || 0, e, o].join(" ")); for (var f = h.querySelectorAll("foreignObject > *"), d = 0; d < f.length; d++)f[d].getAttribute("xmlns") || f[d].setAttributeNS(s, "xmlns", "http://www.w3.org/1999/xhtml"); l.appendChild(h), i(t, a, function (t) { var i = document.createElement("style"); i.setAttribute("type", "text/css"), i.innerHTML = "<![CDATA[\n" + t + "\n]]>"; var n = document.createElement("defs"); if (n.appendChild(i), h.insertBefore(n, h.firstChild), r) { var a = l.innerHTML; a = a.replace(/NS\d+:href/gi, 'xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href'), r(a, e, o) } }) }) }, t.svgAsDataUri = function (e, i, n) { t.prepareSvg(e, i, function (t) { var e, i = "data:image/svg+xml;base64," + window.btoa((e = '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" [<!ENTITY nbsp "&#160;">]>' + t, e = (e = encodeURIComponent(e)).replace(/%([0-9A-F]{2})/g, function (t, e) { var i = String.fromCharCode("0x" + e); return "%" === i ? "%25" : i }), decodeURIComponent(e))); n && n(i) }) }, t.svgAsPngUri = function (i, n, a) { e(i), (n = n || {}).encoderType = n.encoderType || "image/png", n.encoderOptions = n.encoderOptions || .8; var r = function (t, e, i) { var r = document.createElement("canvas"), s = r.getContext("2d"); r.width = e, r.height = i; var o, l = window.devicePixelRatio || 1; r.style.width = r.width + "px", r.style.height = r.height + "px", r.width *= l, r.height *= l, s.setTransform(l, 0, 0, l, 0, 0), n.canvg ? n.canvg(r, t) : s.drawImage(t, 0, 0), n.backgroundColor && (s.globalCompositeOperation = "destination-over", s.fillStyle = n.backgroundColor, s.fillRect(0, 0, r.width, r.height)); try { o = r.toDataURL(n.encoderType, n.encoderOptions) } catch (t) { if ("undefined" != typeof SecurityError && t instanceof SecurityError || "SecurityError" == t.name) return void console.error("Rendered SVG images cannot be downloaded in this browser."); throw t } a(o) }; n.canvg ? t.prepareSvg(i, n, r) : t.svgAsDataUri(i, n, function (t) { var e = new Image; e.onload = function () { r(e, e.width, e.height) }, e.onerror = function () { console.error("There was an error loading the data URI as an image on the following SVG\n", window.atob(t.slice(26)), "\n", "Open the following link to see browser's diagnosis\n", t) }, e.src = t }) }, t.download = function (t, e) { if (navigator.msSaveOrOpenBlob) navigator.msSaveOrOpenBlob(a(e), t); else { var i = document.createElement("a"); if ("download" in i) { i.download = t, i.style.display = "none", document.body.appendChild(i); try { var n = a(e), r = URL.createObjectURL(n); i.href = r, i.onclick = function () { requestAnimationFrame(function () { URL.revokeObjectURL(r) }) } } catch (t) { console.warn("This browser does not support object URLs. Falling back to string URL."), i.href = e } i.click(), document.body.removeChild(i) } else window.open(e, "_temp", "menubar=no,toolbar=no,status=no") } }, t.saveSvg = function (i, n, a) { e(i), a = a || {}, t.svgAsDataUri(i, a, function (e) { t.download(n, e) }) }, t.saveSvgAsPng = function (i, n, a, r) { e(i), a = a || {}, t.svgAsPngUri(i, a, function (e) { r ? r(e) : t.download(n, e) }) }, "undefined" != typeof define && define(function () { return t }) }(); var mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259], shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24]; function premultiplyAlpha(t) { for (var e = t.data, i = t.width * t.height * 4, n = 0; n < i; n += 4) { var a = e[n + 3] / 255; e[n] *= a, e[n + 1] *= a, e[n + 2] *= a } } function unpremultiplyAlpha(t) { for (var e = t.data, i = t.width * t.height * 4, n = 0; n < i; n += 4) { var a = e[n + 3]; 0 != a && (a = 255 / a, e[n] *= a, e[n + 1] *= a, e[n + 2] *= a) } } function stackBlurImage(t, e, i, n) { var a = document.getElementById(t), r = a.naturalWidth, s = a.naturalHeight, o = document.getElementById(e); o.style.width = r + "px", o.style.height = s + "px", o.width = r, o.height = s; var l = o.getContext("2d"); l.clearRect(0, 0, r, s), l.drawImage(a, 0, 0), isNaN(i) || i < 1 || (n ? stackBlurCanvasRGBA(e, 0, 0, r, s, i) : stackBlurCanvasRGB(e, 0, 0, r, s, i)) } function stackBlurCanvasRGBA(t, e, i, n, a, r) { if (!(isNaN(r) || r < 1)) { r |= 0; var s, o = document.getElementById(t).getContext("2d"); try { try { s = o.getImageData(e, i, n, a) } catch (t) { try { netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead"), s = o.getImageData(e, i, n, a) } catch (t) { throw alert("Cannot access local image"), new Error("unable to access local image data: " + t) } } } catch (t) { throw alert("Cannot access image"), new Error("unable to access image data: " + t) } premultiplyAlpha(s); var l, h, u, c, f, d, m, p, g, y, v, b, x, w, E, P, B, C, T, k, S, V, M, A, R = s.data, D = r + r + 1, I = n - 1, N = a - 1, O = r + 1, L = O * (O + 1) / 2, z = new BlurStack, X = z; for (u = 1; u < D; u++)if (X = X.next = new BlurStack, u == O) var U = X; X.next = z; var G = null, F = null; m = d = 0; var q = mul_table[r], W = shg_table[r]; for (h = 0; h < a; h++) { for (P = B = C = T = p = g = y = v = 0, b = O * (k = R[d]), x = O * (S = R[d + 1]), w = O * (V = R[d + 2]), E = O * (M = R[d + 3]), p += L * k, g += L * S, y += L * V, v += L * M, X = z, u = 0; u < O; u++)X.r = k, X.g = S, X.b = V, X.a = M, X = X.next; for (u = 1; u < O; u++)c = d + ((I < u ? I : u) << 2), p += (X.r = k = R[c]) * (A = O - u), g += (X.g = S = R[c + 1]) * A, y += (X.b = V = R[c + 2]) * A, v += (X.a = M = R[c + 3]) * A, P += k, B += S, C += V, T += M, X = X.next; for (G = z, F = U, l = 0; l < n; l++)R[d] = p * q >> W, R[d + 1] = g * q >> W, R[d + 2] = y * q >> W, R[d + 3] = v * q >> W, p -= b, g -= x, y -= w, v -= E, b -= G.r, x -= G.g, w -= G.b, E -= G.a, c = m + ((c = l + r + 1) < I ? c : I) << 2, p += P += G.r = R[c], g += B += G.g = R[c + 1], y += C += G.b = R[c + 2], v += T += G.a = R[c + 3], G = G.next, b += k = F.r, x += S = F.g, w += V = F.b, E += M = F.a, P -= k, B -= S, C -= V, T -= M, F = F.next, d += 4; m += n } for (l = 0; l < n; l++) { for (B = C = T = P = g = y = v = p = 0, b = O * (k = R[d = l << 2]), x = O * (S = R[d + 1]), w = O * (V = R[d + 2]), E = O * (M = R[d + 3]), p += L * k, g += L * S, y += L * V, v += L * M, X = z, u = 0; u < O; u++)X.r = k, X.g = S, X.b = V, X.a = M, X = X.next; for (f = n, u = 1; u <= r; u++)d = f + l << 2, p += (X.r = k = R[d]) * (A = O - u), g += (X.g = S = R[d + 1]) * A, y += (X.b = V = R[d + 2]) * A, v += (X.a = M = R[d + 3]) * A, P += k, B += S, C += V, T += M, X = X.next, u < N && (f += n); for (d = l, G = z, F = U, h = 0; h < a; h++)R[c = d << 2] = p * q >> W, R[c + 1] = g * q >> W, R[c + 2] = y * q >> W, R[c + 3] = v * q >> W, p -= b, g -= x, y -= w, v -= E, b -= G.r, x -= G.g, w -= G.b, E -= G.a, c = l + ((c = h + O) < N ? c : N) * n << 2, p += P += G.r = R[c], g += B += G.g = R[c + 1], y += C += G.b = R[c + 2], v += T += G.a = R[c + 3], G = G.next, b += k = F.r, x += S = F.g, w += V = F.b, E += M = F.a, P -= k, B -= S, C -= V, T -= M, F = F.next, d += n } unpremultiplyAlpha(s), o.putImageData(s, e, i) } } function stackBlurCanvasRGB(t, e, i, n, a, r) { if (!(isNaN(r) || r < 1)) { r |= 0; var s, o = document.getElementById(t).getContext("2d"); try { try { s = o.getImageData(e, i, n, a) } catch (t) { try { netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead"), s = o.getImageData(e, i, n, a) } catch (t) { throw alert("Cannot access local image"), new Error("unable to access local image data: " + t) } } } catch (t) { throw alert("Cannot access image"), new Error("unable to access image data: " + t) } var l, h, u, c, f, d, m, p, g, y, v, b, x, w, E, P, B, C, T, k, S = s.data, V = r + r + 1, M = n - 1, A = a - 1, R = r + 1, D = R * (R + 1) / 2, I = new BlurStack, N = I; for (u = 1; u < V; u++)if (N = N.next = new BlurStack, u == R) var O = N; N.next = I; var L = null, z = null; m = d = 0; var X = mul_table[r], U = shg_table[r]; for (h = 0; h < a; h++) { for (w = E = P = p = g = y = 0, v = R * (B = S[d]), b = R * (C = S[d + 1]), x = R * (T = S[d + 2]), p += D * B, g += D * C, y += D * T, N = I, u = 0; u < R; u++)N.r = B, N.g = C, N.b = T, N = N.next; for (u = 1; u < R; u++)c = d + ((M < u ? M : u) << 2), p += (N.r = B = S[c]) * (k = R - u), g += (N.g = C = S[c + 1]) * k, y += (N.b = T = S[c + 2]) * k, w += B, E += C, P += T, N = N.next; for (L = I, z = O, l = 0; l < n; l++)S[d] = p * X >> U, S[d + 1] = g * X >> U, S[d + 2] = y * X >> U, p -= v, g -= b, y -= x, v -= L.r, b -= L.g, x -= L.b, c = m + ((c = l + r + 1) < M ? c : M) << 2, p += w += L.r = S[c], g += E += L.g = S[c + 1], y += P += L.b = S[c + 2], L = L.next, v += B = z.r, b += C = z.g, x += T = z.b, w -= B, E -= C, P -= T, z = z.next, d += 4; m += n } for (l = 0; l < n; l++) { for (E = P = w = g = y = p = 0, v = R * (B = S[d = l << 2]), b = R * (C = S[d + 1]), x = R * (T = S[d + 2]), p += D * B, g += D * C, y += D * T, N = I, u = 0; u < R; u++)N.r = B, N.g = C, N.b = T, N = N.next; for (f = n, u = 1; u <= r; u++)d = f + l << 2, p += (N.r = B = S[d]) * (k = R - u), g += (N.g = C = S[d + 1]) * k, y += (N.b = T = S[d + 2]) * k, w += B, E += C, P += T, N = N.next, u < A && (f += n); for (d = l, L = I, z = O, h = 0; h < a; h++)S[c = d << 2] = p * X >> U, S[c + 1] = g * X >> U, S[c + 2] = y * X >> U, p -= v, g -= b, y -= x, v -= L.r, b -= L.g, x -= L.b, c = l + ((c = h + R) < A ? c : A) * n << 2, p += w += L.r = S[c], g += E += L.g = S[c + 1], y += P += L.b = S[c + 2], L = L.next, v += B = z.r, b += C = z.g, x += T = z.b, w -= B, E -= C, P -= T, z = z.next, d += n } o.putImageData(s, e, i) } } function BlurStack() { this.r = 0, this.g = 0, this.b = 0, this.a = 0, this.next = null } !function () { var t; this.canvg = function (t, e, i) { if (null != t || null != e || null != i) { "string" == typeof t && (t = document.getElementById(t)), null != t.svg && t.svg.stop(); var n = u(i || {}); 1 == t.childNodes.length && "OBJECT" == t.childNodes[0].nodeName || (t.svg = n); var a = t.getContext("2d"); void 0 !== e.documentElement ? n.loadXmlDoc(a, e) : "<" == e.substr(0, 1) ? n.loadXml(a, e) : n.load(a, e) } else for (var r = document.querySelectorAll("svg"), s = 0; s < r.length; s++) { var o = r[s], l = document.createElement("canvas"); l.width = o.clientWidth, l.height = o.clientHeight, o.parentNode.insertBefore(l, o), o.parentNode.removeChild(o); var h = document.createElement("div"); h.appendChild(o), canvg(l, h.innerHTML) } }, void 0 !== Element.prototype.matches ? t = function (t, e) { return t.matches(e) } : void 0 !== Element.prototype.webkitMatchesSelector ? t = function (t, e) { return t.webkitMatchesSelector(e) } : void 0 !== Element.prototype.mozMatchesSelector ? t = function (t, e) { return t.mozMatchesSelector(e) } : void 0 !== Element.prototype.msMatchesSelector ? t = function (t, e) { return t.msMatchesSelector(e) } : void 0 !== Element.prototype.oMatchesSelector ? t = function (t, e) { return t.oMatchesSelector(e) } : ("function" != typeof jQuery && "function" != typeof Zepto || (t = function (t, e) { return $(t).is(e) }), void 0 === t && (t = Sizzle.matchesSelector)); var e = /(\[[^\]]+\])/g, n = /(#[^\s\+>~\.\[:]+)/g, a = /(\.[^\s\+>~\.\[:]+)/g, r = /(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi, s = /(:[\w-]+\([^\)]*\))/gi, o = /(:[^\s\+>~\.\[:]+)/g, l = /([^\s\+>~\.\[:]+)/g; function h(t) { var i = [0, 0, 0], h = function (e, n) { var a = t.match(e); null != a && (i[n] += a.length, t = t.replace(e, " ")) }; return t = (t = t.replace(/:not\(([^\)]*)\)/g, "     $1 ")).replace(/{[^]*/gm, " "), h(e, 1), h(n, 0), h(a, 1), h(r, 2), h(s, 1), h(o, 1), t = (t = t.replace(/[\*\s\+>~]/g, " ")).replace(/[#\.]/g, " "), h(l, 2), i.join("") } function u(e) { var n = { opts: e, FRAMERATE: 30, MAX_VIRTUAL_PIXELS: 3e4, log: function (t) { } }; 1 == n.opts.log && "undefined" != typeof console && (n.log = function (t) { console.log(t) }), n.init = function (t) { var e = 0; n.UniqueId = function () { return "canvg" + ++e }, n.Definitions = {}, n.Styles = {}, n.StylesSpecificity = {}, n.Animations = [], n.Images = [], n.ctx = t, n.ViewPort = new function () { this.viewPorts = [], this.Clear = function () { this.viewPorts = [] }, this.SetCurrent = function (t, e) { this.viewPorts.push({ width: t, height: e }) }, this.RemoveCurrent = function () { this.viewPorts.pop() }, this.Current = function () { return this.viewPorts[this.viewPorts.length - 1] }, this.width = function () { return this.Current().width }, this.height = function () { return this.Current().height }, this.ComputeSize = function (t) { return null != t && "number" == typeof t ? t : "x" == t ? this.width() : "y" == t ? this.height() : Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2) } } }, n.init(), n.ImagesLoaded = function () { for (var t = 0; t < n.Images.length; t++)if (!n.Images[t].loaded) return !1; return !0 }, n.trim = function (t) { return t.replace(/^\s+|\s+$/g, "") }, n.compressSpaces = function (t) { return t.replace(/[\s\r\t\n]+/gm, " ") }, n.ajax = function (t) { var e; return (e = window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP")) ? (e.open("GET", t, !1), e.send(null), e.responseText) : null }, n.parseXml = function (t) { if ("undefined" != typeof Windows && void 0 !== Windows.Data && void 0 !== Windows.Data.Xml) { var e = new Windows.Data.Xml.Dom.XmlDocument, i = new Windows.Data.Xml.Dom.XmlLoadSettings; return i.prohibitDtd = !1, e.loadXml(t, i), e } return window.DOMParser ? (new DOMParser).parseFromString(t, "text/xml") : (t = t.replace(/<!DOCTYPE svg[^>]*>/, ""), (e = new ActiveXObject("Microsoft.XMLDOM")).async = "false", e.loadXML(t), e) }, n.Property = function (t, e) { this.name = t, this.value = e }, n.Property.prototype.getValue = function () { return this.value }, n.Property.prototype.hasValue = function () { return null != this.value && "" !== this.value }, n.Property.prototype.numValue = function () { if (!this.hasValue()) return 0; var t = parseFloat(this.value); return (this.value + "").match(/%$/) && (t /= 100), t }, n.Property.prototype.valueOrDefault = function (t) { return this.hasValue() ? this.value : t }, n.Property.prototype.numValueOrDefault = function (t) { return this.hasValue() ? this.numValue() : t }, n.Property.prototype.addOpacity = function (t) { var e = this.value; if (null != t.value && "" != t.value && "string" == typeof this.value) { var i = new RGBColor(this.value); i.ok && (e = "rgba(" + i.r + ", " + i.g + ", " + i.b + ", " + t.numValue() + ")") } return new n.Property(this.name, e) }, n.Property.prototype.getDefinition = function () { var t = this.value.match(/#([^\)'"]+)/); return t && (t = t[1]), t || (t = this.value), n.Definitions[t] }, n.Property.prototype.isUrlDefinition = function () { return 0 == this.value.indexOf("url(") }, n.Property.prototype.getFillStyleDefinition = function (t, e) { var i = this.getDefinition(); if (null != i && i.createGradient) return i.createGradient(n.ctx, t, e); if (null != i && i.createPattern) { if (i.getHrefAttribute().hasValue()) { var a = i.attribute("patternTransform"); i = i.getHrefAttribute().getDefinition(), a.hasValue() && (i.attribute("patternTransform", !0).value = a.value) } return i.createPattern(n.ctx, t) } return null }, n.Property.prototype.getDPI = function (t) { return 96 }, n.Property.prototype.getEM = function (t) { var e = 12, i = new n.Property("fontSize", n.Font.Parse(n.ctx.font).fontSize); return i.hasValue() && (e = i.toPixels(t)), e }, n.Property.prototype.getUnits = function () { return (this.value + "").replace(/[0-9\.\-]/g, "") }, n.Property.prototype.toPixels = function (t, e) { if (!this.hasValue()) return 0; var i = this.value + ""; if (i.match(/em$/)) return this.numValue() * this.getEM(t); if (i.match(/ex$/)) return this.numValue() * this.getEM(t) / 2; if (i.match(/px$/)) return this.numValue(); if (i.match(/pt$/)) return this.numValue() * this.getDPI(t) * (1 / 72); if (i.match(/pc$/)) return 15 * this.numValue(); if (i.match(/cm$/)) return this.numValue() * this.getDPI(t) / 2.54; if (i.match(/mm$/)) return this.numValue() * this.getDPI(t) / 25.4; if (i.match(/in$/)) return this.numValue() * this.getDPI(t); if (i.match(/%$/)) return this.numValue() * n.ViewPort.ComputeSize(t); var a = this.numValue(); return e && a < 1 ? a * n.ViewPort.ComputeSize(t) : a }, n.Property.prototype.toMilliseconds = function () { if (!this.hasValue()) return 0; var t = this.value + ""; return t.match(/s$/) ? 1e3 * this.numValue() : (t.match(/ms$/), this.numValue()) }, n.Property.prototype.toRadians = function () { if (!this.hasValue()) return 0; var t = this.value + ""; return t.match(/deg$/) ? this.numValue() * (Math.PI / 180) : t.match(/grad$/) ? this.numValue() * (Math.PI / 200) : t.match(/rad$/) ? this.numValue() : this.numValue() * (Math.PI / 180) }; var a = { baseline: "alphabetic", "before-edge": "top", "text-before-edge": "top", middle: "middle", central: "middle", "after-edge": "bottom", "text-after-edge": "bottom", ideographic: "ideographic", alphabetic: "alphabetic", hanging: "hanging", mathematical: "alphabetic" }; return n.Property.prototype.toTextBaseline = function () { return this.hasValue() ? a[this.value] : null }, n.Font = new function () { this.Styles = "normal|italic|oblique|inherit", this.Variants = "normal|small-caps|inherit", this.Weights = "normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit", this.CreateFont = function (t, e, i, a, r, s) { var o = null != s ? this.Parse(s) : this.CreateFont("", "", "", "", "", n.ctx.font); return { fontFamily: r || o.fontFamily, fontSize: a || o.fontSize, fontStyle: t || o.fontStyle, fontWeight: i || o.fontWeight, fontVariant: e || o.fontVariant, toString: function () { return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(" ") } } }; var t = this; this.Parse = function (e) { for (var i = {}, a = n.trim(n.compressSpaces(e || "")).split(" "), r = { fontSize: !1, fontStyle: !1, fontWeight: !1, fontVariant: !1 }, s = "", o = 0; o < a.length; o++)r.fontStyle || -1 == t.Styles.indexOf(a[o]) ? r.fontVariant || -1 == t.Variants.indexOf(a[o]) ? r.fontWeight || -1 == t.Weights.indexOf(a[o]) ? r.fontSize ? "inherit" != a[o] && (s += a[o]) : ("inherit" != a[o] && (i.fontSize = a[o].split("/")[0]), r.fontStyle = r.fontVariant = r.fontWeight = r.fontSize = !0) : ("inherit" != a[o] && (i.fontWeight = a[o]), r.fontStyle = r.fontVariant = r.fontWeight = !0) : ("inherit" != a[o] && (i.fontVariant = a[o]), r.fontStyle = r.fontVariant = !0) : ("inherit" != a[o] && (i.fontStyle = a[o]), r.fontStyle = !0); return "" != s && (i.fontFamily = s), i } }, n.ToNumberArray = function (t) { for (var e = n.trim(n.compressSpaces((t || "").replace(/,/g, " "))).split(" "), i = 0; i < e.length; i++)e[i] = parseFloat(e[i]); return e }, n.Point = function (t, e) { this.x = t, this.y = e }, n.Point.prototype.angleTo = function (t) { return Math.atan2(t.y - this.y, t.x - this.x) }, n.Point.prototype.applyTransform = function (t) { var e = this.x * t[0] + this.y * t[2] + t[4], i = this.x * t[1] + this.y * t[3] + t[5]; this.x = e, this.y = i }, n.CreatePoint = function (t) { var e = n.ToNumberArray(t); return new n.Point(e[0], e[1]) }, n.CreatePath = function (t) { for (var e = n.ToNumberArray(t), i = [], a = 0; a < e.length; a += 2)i.push(new n.Point(e[a], e[a + 1])); return i }, n.BoundingBox = function (t, e, n, a) { this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN, this.x = function () { return this.x1 }, this.y = function () { return this.y1 }, this.width = function () { return this.x2 - this.x1 }, this.height = function () { return this.y2 - this.y1 }, this.addPoint = function (t, e) { null != t && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = t, this.x2 = t), t < this.x1 && (this.x1 = t), t > this.x2 && (this.x2 = t)), null != e && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = e, this.y2 = e), e < this.y1 && (this.y1 = e), e > this.y2 && (this.y2 = e)) }, this.addX = function (t) { this.addPoint(t, null) }, this.addY = function (t) { this.addPoint(null, t) }, this.addBoundingBox = function (t) { this.addPoint(t.x1, t.y1), this.addPoint(t.x2, t.y2) }, this.addQuadraticCurve = function (t, e, i, n, a, r) { var s = t + 2 / 3 * (i - t), o = e + 2 / 3 * (n - e), l = s + 1 / 3 * (a - t), h = o + 1 / 3 * (r - e); this.addBezierCurve(t, e, s, l, o, h, a, r) }, this.addBezierCurve = function (t, e, n, a, r, s, o, l) { var h = [t, e], u = [n, a], c = [r, s], f = [o, l]; for (this.addPoint(h[0], h[1]), this.addPoint(f[0], f[1]), i = 0; i <= 1; i++) { var d = function (t) { return Math.pow(1 - t, 3) * h[i] + 3 * Math.pow(1 - t, 2) * t * u[i] + 3 * (1 - t) * Math.pow(t, 2) * c[i] + Math.pow(t, 3) * f[i] }, m = 6 * h[i] - 12 * u[i] + 6 * c[i], p = -3 * h[i] + 9 * u[i] - 9 * c[i] + 3 * f[i], g = 3 * u[i] - 3 * h[i]; if (0 != p) { var y = Math.pow(m, 2) - 4 * g * p; if (!(y < 0)) { var v = (-m + Math.sqrt(y)) / (2 * p); 0 < v && v < 1 && (0 == i && this.addX(d(v)), 1 == i && this.addY(d(v))); var b = (-m - Math.sqrt(y)) / (2 * p); 0 < b && b < 1 && (0 == i && this.addX(d(b)), 1 == i && this.addY(d(b))) } } else { if (0 == m) continue; var x = -g / m; 0 < x && x < 1 && (0 == i && this.addX(d(x)), 1 == i && this.addY(d(x))) } } }, this.isPointInBox = function (t, e) { return this.x1 <= t && t <= this.x2 && this.y1 <= e && e <= this.y2 }, this.addPoint(t, e), this.addPoint(n, a) }, n.Transform = function (t) { var e = this; this.Type = {}, this.Type.translate = function (t) { this.p = n.CreatePoint(t), this.apply = function (t) { t.translate(this.p.x || 0, this.p.y || 0) }, this.unapply = function (t) { t.translate(-1 * this.p.x || 0, -1 * this.p.y || 0) }, this.applyToPoint = function (t) { t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]) } }, this.Type.rotate = function (t) { var e = n.ToNumberArray(t); this.angle = new n.Property("angle", e[0]), this.cx = e[1] || 0, this.cy = e[2] || 0, this.apply = function (t) { t.translate(this.cx, this.cy), t.rotate(this.angle.toRadians()), t.translate(-this.cx, -this.cy) }, this.unapply = function (t) { t.translate(this.cx, this.cy), t.rotate(-1 * this.angle.toRadians()), t.translate(-this.cx, -this.cy) }, this.applyToPoint = function (t) { var e = this.angle.toRadians(); t.applyTransform([1, 0, 0, 1, this.p.x || 0, this.p.y || 0]), t.applyTransform([Math.cos(e), Math.sin(e), -Math.sin(e), Math.cos(e), 0, 0]), t.applyTransform([1, 0, 0, 1, -this.p.x || 0, -this.p.y || 0]) } }, this.Type.scale = function (t) { this.p = n.CreatePoint(t), this.apply = function (t) { t.scale(this.p.x || 1, this.p.y || this.p.x || 1) }, this.unapply = function (t) { t.scale(1 / this.p.x || 1, 1 / this.p.y || this.p.x || 1) }, this.applyToPoint = function (t) { t.applyTransform([this.p.x || 0, 0, 0, this.p.y || 0, 0, 0]) } }, this.Type.matrix = function (t) { this.m = n.ToNumberArray(t), this.apply = function (t) { t.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]) }, this.unapply = function (t) { var e = this.m[0], i = this.m[2], n = this.m[4], a = this.m[1], r = this.m[3], s = this.m[5], o = 1 / (e * (1 * r - 0 * s) - i * (1 * a - 0 * s) + n * (0 * a - 0 * r)); t.transform(o * (1 * r - 0 * s), o * (0 * s - 1 * a), o * (0 * n - 1 * i), o * (1 * e - 0 * n), o * (i * s - n * r), o * (n * a - e * s)) }, this.applyToPoint = function (t) { t.applyTransform(this.m) } }, this.Type.SkewBase = function (t) { this.base = e.Type.matrix, this.base(t), this.angle = new n.Property("angle", t) }, this.Type.SkewBase.prototype = new this.Type.matrix, this.Type.skewX = function (t) { this.base = e.Type.SkewBase, this.base(t), this.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0] }, this.Type.skewX.prototype = new this.Type.SkewBase, this.Type.skewY = function (t) { this.base = e.Type.SkewBase, this.base(t), this.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0] }, this.Type.skewY.prototype = new this.Type.SkewBase, this.transforms = [], this.apply = function (t) { for (var e = 0; e < this.transforms.length; e++)this.transforms[e].apply(t) }, this.unapply = function (t) { for (var e = this.transforms.length - 1; e >= 0; e--)this.transforms[e].unapply(t) }, this.applyToPoint = function (t) { for (var e = 0; e < this.transforms.length; e++)this.transforms[e].applyToPoint(t) }; for (var i = n.trim(n.compressSpaces(t)).replace(/\)([a-zA-Z])/g, ") $1").replace(/\)(\s?,\s?)/g, ") ").split(/\s(?=[a-z])/), a = 0; a < i.length; a++) { var r = n.trim(i[a].split("(")[0]), s = i[a].split("(")[1]; if (!s) break; var o = s.replace(")", ""), l = new this.Type[r](o); l.type = r, this.transforms.push(l) } }, n.AspectRatio = function (t, e, i, a, r, s, o, l, h, u) { var c = (e = (e = n.compressSpaces(e)).replace(/^defer\s/, "")).split(" ")[0] || "xMidYMid", f = e.split(" ")[1] || "meet", d = i / a, m = r / s, p = Math.min(d, m), g = Math.max(d, m); "meet" == f && (a *= p, s *= p), "slice" == f && (a *= g, s *= g), h = new n.Property("refX", h), u = new n.Property("refY", u), h.hasValue() && u.hasValue() ? t.translate(-p * h.toPixels("x"), -p * u.toPixels("y")) : (c.match(/^xMid/) && ("meet" == f && p == m || "slice" == f && g == m) && t.translate(i / 2 - a / 2, 0), c.match(/YMid$/) && ("meet" == f && p == d || "slice" == f && g == d) && t.translate(0, r / 2 - s / 2), c.match(/^xMax/) && ("meet" == f && p == m || "slice" == f && g == m) && t.translate(i - a, 0), c.match(/YMax$/) && ("meet" == f && p == d || "slice" == f && g == d) && t.translate(0, r - s)), "none" == c ? t.scale(d, m) : "meet" == f ? t.scale(p, p) : "slice" == f && t.scale(g, g), t.translate(null == o ? 0 : -o, null == l ? 0 : -l) }, n.Element = {}, n.EmptyProperty = new n.Property("EMPTY", ""), n.Element.ElementBase = function (e) { if (this.attributes = {}, this.styles = {}, this.stylesSpecificity = {}, this.children = [], this.attribute = function (t, e) { var i = this.attributes[t]; return null != i ? i : (1 == e && (i = new n.Property(t, ""), this.attributes[t] = i), i || n.EmptyProperty) }, this.getHrefAttribute = function () { for (var t in this.attributes) if ("href" == t || t.match(/:href$/)) return this.attributes[t]; return n.EmptyProperty }, this.style = function (t, e, i) { var a = this.styles[t]; if (null != a) return a; var r = this.attribute(t); if (null != r && r.hasValue()) return this.styles[t] = r, r; if (1 != i) { var s = this.parent; if (null != s) { var o = s.style(t); if (null != o && o.hasValue()) return o } } return 1 == e && (a = new n.Property(t, ""), this.styles[t] = a), a || n.EmptyProperty }, this.render = function (t) { if ("none" != this.style("display").value && "hidden" != this.style("visibility").value) { if (t.save(), this.attribute("mask").hasValue()) { var e = this.attribute("mask").getDefinition(); null != e && e.apply(t, this) } else if (this.style("filter").hasValue()) { var i = this.style("filter").getDefinition(); null != i && i.apply(t, this) } else this.setContext(t), this.renderChildren(t), this.clearContext(t); t.restore() } }, this.setContext = function (t) { }, this.clearContext = function (t) { }, this.renderChildren = function (t) { for (var e = 0; e < this.children.length; e++)this.children[e].render(t) }, this.addChild = function (t, e) { var i = t; e && (i = n.CreateElement(t)), i.parent = this, "title" != i.type && this.children.push(i) }, this.addStylesFromStyleDefinition = function () { for (var i in n.Styles) if ("@" != i[0] && t(e, i)) { var a = n.Styles[i], r = n.StylesSpecificity[i]; if (null != a) for (var s in a) { var o = this.stylesSpecificity[s]; void 0 === o && (o = "000"), r > o && (this.styles[s] = a[s], this.stylesSpecificity[s] = r) } } }, null != e && 1 == e.nodeType) { for (var i = 0; i < e.attributes.length; i++) { var a = e.attributes[i]; this.attributes[a.nodeName] = new n.Property(a.nodeName, a.value) } if (this.addStylesFromStyleDefinition(), this.attribute("style").hasValue()) { var r = this.attribute("style").value.split(";"); for (i = 0; i < r.length; i++)if ("" != n.trim(r[i])) { var s = r[i].split(":"), o = n.trim(s[0]), l = n.trim(s[1]); this.styles[o] = new n.Property(o, l) } } this.attribute("id").hasValue() && null == n.Definitions[this.attribute("id").value] && (n.Definitions[this.attribute("id").value] = this); for (i = 0; i < e.childNodes.length; i++) { var h = e.childNodes[i]; if (1 == h.nodeType && this.addChild(h, !0), this.captureTextNodes && (3 == h.nodeType || 4 == h.nodeType)) { var u = h.value || h.text || h.textContent || ""; "" != n.compressSpaces(u) && this.addChild(new n.Element.tspan(h), !1) } } } }, n.Element.RenderedElementBase = function (t) { this.base = n.Element.ElementBase, this.base(t), this.setContext = function (t) { var e; if (this.style("fill").isUrlDefinition()) null != (e = this.style("fill").getFillStyleDefinition(this, this.style("fill-opacity"))) && (t.fillStyle = e); else if (this.style("fill").hasValue()) { var i; "currentColor" == (i = this.style("fill")).value && (i.value = this.style("color").value), "inherit" != i.value && (t.fillStyle = "none" == i.value ? "rgba(0,0,0,0)" : i.value) } this.style("fill-opacity").hasValue() && (i = (i = new n.Property("fill", t.fillStyle)).addOpacity(this.style("fill-opacity")), t.fillStyle = i.value); if (this.style("stroke").isUrlDefinition()) null != (e = this.style("stroke").getFillStyleDefinition(this, this.style("stroke-opacity"))) && (t.strokeStyle = e); else if (this.style("stroke").hasValue()) { var a; "currentColor" == (a = this.style("stroke")).value && (a.value = this.style("color").value), "inherit" != a.value && (t.strokeStyle = "none" == a.value ? "rgba(0,0,0,0)" : a.value) } this.style("stroke-opacity").hasValue() && (a = (a = new n.Property("stroke", t.strokeStyle)).addOpacity(this.style("stroke-opacity")), t.strokeStyle = a.value); if (this.style("stroke-width").hasValue()) { var r = this.style("stroke-width").toPixels(); t.lineWidth = 0 == r ? .001 : r } if (this.style("stroke-linecap").hasValue() && (t.lineCap = this.style("stroke-linecap").value), this.style("stroke-linejoin").hasValue() && (t.lineJoin = this.style("stroke-linejoin").value), this.style("stroke-miterlimit").hasValue() && (t.miterLimit = this.style("stroke-miterlimit").value), this.style("stroke-dasharray").hasValue() && "none" != this.style("stroke-dasharray").value) { var s = n.ToNumberArray(this.style("stroke-dasharray").value); void 0 !== t.setLineDash ? t.setLineDash(s) : void 0 !== t.webkitLineDash ? t.webkitLineDash = s : void 0 === t.mozDash || 1 == s.length && 0 == s[0] || (t.mozDash = s); var o = this.style("stroke-dashoffset").numValueOrDefault(1); void 0 !== t.lineDashOffset ? t.lineDashOffset = o : void 0 !== t.webkitLineDashOffset ? t.webkitLineDashOffset = o : void 0 !== t.mozDashOffset && (t.mozDashOffset = o) } (void 0 !== t.font && (t.font = n.Font.CreateFont(this.style("font-style").value, this.style("font-variant").value, this.style("font-weight").value, this.style("font-size").hasValue() ? this.style("font-size").toPixels() + "px" : "", this.style("font-family").value).toString()), this.style("transform", !1, !0).hasValue()) && new n.Transform(this.style("transform", !1, !0).value).apply(t); if (this.attribute("clip-path", !1, !0).hasValue()) { var l = this.attribute("clip-path", !1, !0).getDefinition(); null != l && l.apply(t) } this.style("opacity").hasValue() && (t.globalAlpha = this.style("opacity").numValue()) } }, n.Element.RenderedElementBase.prototype = new n.Element.ElementBase, n.Element.PathElementBase = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.path = function (t) { return null != t && t.beginPath(), new n.BoundingBox }, this.renderChildren = function (t) { this.path(t), n.Mouse.checkPath(this, t), "" != t.fillStyle && ("inherit" != this.style("fill-rule").valueOrDefault("inherit") ? t.fill(this.style("fill-rule").value) : t.fill()), "" != t.strokeStyle && t.stroke(); var e = this.getMarkers(); if (null != e) { if (this.style("marker-start").isUrlDefinition()) (i = this.style("marker-start").getDefinition()).render(t, e[0][0], e[0][1]); if (this.style("marker-mid").isUrlDefinition()) for (var i = this.style("marker-mid").getDefinition(), a = 1; a < e.length - 1; a++)i.render(t, e[a][0], e[a][1]); if (this.style("marker-end").isUrlDefinition()) (i = this.style("marker-end").getDefinition()).render(t, e[e.length - 1][0], e[e.length - 1][1]) } }, this.getBoundingBox = function () { return this.path() }, this.getMarkers = function () { return null } }, n.Element.PathElementBase.prototype = new n.Element.RenderedElementBase, n.Element.svg = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.baseClearContext = this.clearContext, this.clearContext = function (t) { this.baseClearContext(t), n.ViewPort.RemoveCurrent() }, this.baseSetContext = this.setContext, this.setContext = function (t) { t.strokeStyle = "rgba(0,0,0,0)", t.lineCap = "butt", t.lineJoin = "miter", t.miterLimit = 4, void 0 !== t.font && void 0 !== window.getComputedStyle && (t.font = window.getComputedStyle(t.canvas).getPropertyValue("font")), this.baseSetContext(t), this.attribute("x").hasValue() || (this.attribute("x", !0).value = 0), this.attribute("y").hasValue() || (this.attribute("y", !0).value = 0), t.translate(this.attribute("x").toPixels("x"), this.attribute("y").toPixels("y")); var e = n.ViewPort.width(), i = n.ViewPort.height(); if (this.attribute("width").hasValue() || (this.attribute("width", !0).value = "100%"), this.attribute("height").hasValue() || (this.attribute("height", !0).value = "100%"), void 0 === this.root) { e = this.attribute("width").toPixels("x"), i = this.attribute("height").toPixels("y"); var a = 0, r = 0; this.attribute("refX").hasValue() && this.attribute("refY").hasValue() && (a = -this.attribute("refX").toPixels("x"), r = -this.attribute("refY").toPixels("y")), "visible" != this.attribute("overflow").valueOrDefault("hidden") && (t.beginPath(), t.moveTo(a, r), t.lineTo(e, r), t.lineTo(e, i), t.lineTo(a, i), t.closePath(), t.clip()) } if (n.ViewPort.SetCurrent(e, i), this.attribute("viewBox").hasValue()) { var s = n.ToNumberArray(this.attribute("viewBox").value), o = s[0], l = s[1]; e = s[2], i = s[3], n.AspectRatio(t, this.attribute("preserveAspectRatio").value, n.ViewPort.width(), e, n.ViewPort.height(), i, o, l, this.attribute("refX").value, this.attribute("refY").value), n.ViewPort.RemoveCurrent(), n.ViewPort.SetCurrent(s[2], s[3]) } } }, n.Element.svg.prototype = new n.Element.RenderedElementBase, n.Element.rect = function (t) { this.base = n.Element.PathElementBase, this.base(t), this.path = function (t) { var e = this.attribute("x").toPixels("x"), i = this.attribute("y").toPixels("y"), a = this.attribute("width").toPixels("x"), r = this.attribute("height").toPixels("y"), s = this.attribute("rx").toPixels("x"), o = this.attribute("ry").toPixels("y"); return this.attribute("rx").hasValue() && !this.attribute("ry").hasValue() && (o = s), this.attribute("ry").hasValue() && !this.attribute("rx").hasValue() && (s = o), s = Math.min(s, a / 2), o = Math.min(o, r / 2), null != t && (t.beginPath(), t.moveTo(e + s, i), t.lineTo(e + a - s, i), t.quadraticCurveTo(e + a, i, e + a, i + o), t.lineTo(e + a, i + r - o), t.quadraticCurveTo(e + a, i + r, e + a - s, i + r), t.lineTo(e + s, i + r), t.quadraticCurveTo(e, i + r, e, i + r - o), t.lineTo(e, i + o), t.quadraticCurveTo(e, i, e + s, i), t.closePath()), new n.BoundingBox(e, i, e + a, i + r) } }, n.Element.rect.prototype = new n.Element.PathElementBase, n.Element.circle = function (t) { this.base = n.Element.PathElementBase, this.base(t), this.path = function (t) { var e = this.attribute("cx").toPixels("x"), i = this.attribute("cy").toPixels("y"), a = this.attribute("r").toPixels(); return null != t && (t.beginPath(), t.arc(e, i, a, 0, 2 * Math.PI, !0), t.closePath()), new n.BoundingBox(e - a, i - a, e + a, i + a) } }, n.Element.circle.prototype = new n.Element.PathElementBase, n.Element.ellipse = function (t) { this.base = n.Element.PathElementBase, this.base(t), this.path = function (t) { var e = (Math.sqrt(2) - 1) / 3 * 4, i = this.attribute("rx").toPixels("x"), a = this.attribute("ry").toPixels("y"), r = this.attribute("cx").toPixels("x"), s = this.attribute("cy").toPixels("y"); return null != t && (t.beginPath(), t.moveTo(r, s - a), t.bezierCurveTo(r + e * i, s - a, r + i, s - e * a, r + i, s), t.bezierCurveTo(r + i, s + e * a, r + e * i, s + a, r, s + a), t.bezierCurveTo(r - e * i, s + a, r - i, s + e * a, r - i, s), t.bezierCurveTo(r - i, s - e * a, r - e * i, s - a, r, s - a), t.closePath()), new n.BoundingBox(r - i, s - a, r + i, s + a) } }, n.Element.ellipse.prototype = new n.Element.PathElementBase, n.Element.line = function (t) { this.base = n.Element.PathElementBase, this.base(t), this.getPoints = function () { return [new n.Point(this.attribute("x1").toPixels("x"), this.attribute("y1").toPixels("y")), new n.Point(this.attribute("x2").toPixels("x"), this.attribute("y2").toPixels("y"))] }, this.path = function (t) { var e = this.getPoints(); return null != t && (t.beginPath(), t.moveTo(e[0].x, e[0].y), t.lineTo(e[1].x, e[1].y)), new n.BoundingBox(e[0].x, e[0].y, e[1].x, e[1].y) }, this.getMarkers = function () { var t = this.getPoints(), e = t[0].angleTo(t[1]); return [[t[0], e], [t[1], e]] } }, n.Element.line.prototype = new n.Element.PathElementBase, n.Element.polyline = function (t) { this.base = n.Element.PathElementBase, this.base(t), this.points = n.CreatePath(this.attribute("points").value), this.path = function (t) { var e = new n.BoundingBox(this.points[0].x, this.points[0].y); null != t && (t.beginPath(), t.moveTo(this.points[0].x, this.points[0].y)); for (var i = 1; i < this.points.length; i++)e.addPoint(this.points[i].x, this.points[i].y), null != t && t.lineTo(this.points[i].x, this.points[i].y); return e }, this.getMarkers = function () { for (var t = [], e = 0; e < this.points.length - 1; e++)t.push([this.points[e], this.points[e].angleTo(this.points[e + 1])]); return t.push([this.points[this.points.length - 1], t[t.length - 1][1]]), t } }, n.Element.polyline.prototype = new n.Element.PathElementBase, n.Element.polygon = function (t) { this.base = n.Element.polyline, this.base(t), this.basePath = this.path, this.path = function (t) { var e = this.basePath(t); return null != t && (t.lineTo(this.points[0].x, this.points[0].y), t.closePath()), e } }, n.Element.polygon.prototype = new n.Element.polyline, n.Element.path = function (t) { this.base = n.Element.PathElementBase, this.base(t); var e = this.attribute("d").value; e = e.replace(/,/gm, " "); for (var i = 0; i < 2; i++)e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\s])/gm, "$1 $2"); e = (e = e.replace(/([^\s])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2")).replace(/([0-9])([+\-])/gm, "$1 $2"); for (i = 0; i < 2; i++)e = e.replace(/(\.[0-9]*)(\.)/gm, "$1 $2"); e = e.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm, "$1 $3 $4 "), e = n.compressSpaces(e), e = n.trim(e), this.PathParser = new function (t) { this.tokens = t.split(" "), this.reset = function () { this.i = -1, this.command = "", this.previousCommand = "", this.start = new n.Point(0, 0), this.control = new n.Point(0, 0), this.current = new n.Point(0, 0), this.points = [], this.angles = [] }, this.isEnd = function () { return this.i >= this.tokens.length - 1 }, this.isCommandOrEnd = function () { return !!this.isEnd() || null != this.tokens[this.i + 1].match(/^[A-Za-z]$/) }, this.isRelativeCommand = function () { switch (this.command) { case "m": case "l": case "h": case "v": case "c": case "s": case "q": case "t": case "a": case "z": return !0 }return !1 }, this.getToken = function () { return this.i++ , this.tokens[this.i] }, this.getScalar = function () { return parseFloat(this.getToken()) }, this.nextCommand = function () { this.previousCommand = this.command, this.command = this.getToken() }, this.getPoint = function () { var t = new n.Point(this.getScalar(), this.getScalar()); return this.makeAbsolute(t) }, this.getAsControlPoint = function () { var t = this.getPoint(); return this.control = t, t }, this.getAsCurrentPoint = function () { var t = this.getPoint(); return this.current = t, t }, this.getReflectedControlPoint = function () { return "c" != this.previousCommand.toLowerCase() && "s" != this.previousCommand.toLowerCase() && "q" != this.previousCommand.toLowerCase() && "t" != this.previousCommand.toLowerCase() ? this.current : new n.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y) }, this.makeAbsolute = function (t) { return this.isRelativeCommand() && (t.x += this.current.x, t.y += this.current.y), t }, this.addMarker = function (t, e, i) { null != i && this.angles.length > 0 && null == this.angles[this.angles.length - 1] && (this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(i)), this.addMarkerAngle(t, null == e ? null : e.angleTo(t)) }, this.addMarkerAngle = function (t, e) { this.points.push(t), this.angles.push(e) }, this.getMarkerPoints = function () { return this.points }, this.getMarkerAngles = function () { for (var t = 0; t < this.angles.length; t++)if (null == this.angles[t]) for (var e = t + 1; e < this.angles.length; e++)if (null != this.angles[e]) { this.angles[t] = this.angles[e]; break } return this.angles } }(e), this.path = function (t) { var e = this.PathParser; e.reset(); var i = new n.BoundingBox; for (null != t && t.beginPath(); !e.isEnd();)switch (e.nextCommand(), e.command) { case "M": case "m": var a = e.getAsCurrentPoint(); for (e.addMarker(a), i.addPoint(a.x, a.y), null != t && t.moveTo(a.x, a.y), e.start = e.current; !e.isCommandOrEnd();) { a = e.getAsCurrentPoint(); e.addMarker(a, e.start), i.addPoint(a.x, a.y), null != t && t.lineTo(a.x, a.y) } break; case "L": case "l": for (; !e.isCommandOrEnd();) { var r = e.current; a = e.getAsCurrentPoint(); e.addMarker(a, r), i.addPoint(a.x, a.y), null != t && t.lineTo(a.x, a.y) } break; case "H": case "h": for (; !e.isCommandOrEnd();) { var s = new n.Point((e.isRelativeCommand() ? e.current.x : 0) + e.getScalar(), e.current.y); e.addMarker(s, e.current), e.current = s, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y) } break; case "V": case "v": for (; !e.isCommandOrEnd();) { s = new n.Point(e.current.x, (e.isRelativeCommand() ? e.current.y : 0) + e.getScalar()); e.addMarker(s, e.current), e.current = s, i.addPoint(e.current.x, e.current.y), null != t && t.lineTo(e.current.x, e.current.y) } break; case "C": case "c": for (; !e.isCommandOrEnd();) { var o = e.current, l = e.getPoint(), h = e.getAsControlPoint(), u = e.getAsCurrentPoint(); e.addMarker(u, h, l), i.addBezierCurve(o.x, o.y, l.x, l.y, h.x, h.y, u.x, u.y), null != t && t.bezierCurveTo(l.x, l.y, h.x, h.y, u.x, u.y) } break; case "S": case "s": for (; !e.isCommandOrEnd();) { o = e.current, l = e.getReflectedControlPoint(), h = e.getAsControlPoint(), u = e.getAsCurrentPoint(); e.addMarker(u, h, l), i.addBezierCurve(o.x, o.y, l.x, l.y, h.x, h.y, u.x, u.y), null != t && t.bezierCurveTo(l.x, l.y, h.x, h.y, u.x, u.y) } break; case "Q": case "q": for (; !e.isCommandOrEnd();) { o = e.current, h = e.getAsControlPoint(), u = e.getAsCurrentPoint(); e.addMarker(u, h, h), i.addQuadraticCurve(o.x, o.y, h.x, h.y, u.x, u.y), null != t && t.quadraticCurveTo(h.x, h.y, u.x, u.y) } break; case "T": case "t": for (; !e.isCommandOrEnd();) { o = e.current, h = e.getReflectedControlPoint(); e.control = h; u = e.getAsCurrentPoint(); e.addMarker(u, h, h), i.addQuadraticCurve(o.x, o.y, h.x, h.y, u.x, u.y), null != t && t.quadraticCurveTo(h.x, h.y, u.x, u.y) } break; case "A": case "a": for (; !e.isCommandOrEnd();) { o = e.current; var c = e.getScalar(), f = e.getScalar(), d = e.getScalar() * (Math.PI / 180), m = e.getScalar(), p = e.getScalar(), g = (u = e.getAsCurrentPoint(), new n.Point(Math.cos(d) * (o.x - u.x) / 2 + Math.sin(d) * (o.y - u.y) / 2, -Math.sin(d) * (o.x - u.x) / 2 + Math.cos(d) * (o.y - u.y) / 2)), y = Math.pow(g.x, 2) / Math.pow(c, 2) + Math.pow(g.y, 2) / Math.pow(f, 2); y > 1 && (c *= Math.sqrt(y), f *= Math.sqrt(y)); var v = (m == p ? -1 : 1) * Math.sqrt((Math.pow(c, 2) * Math.pow(f, 2) - Math.pow(c, 2) * Math.pow(g.y, 2) - Math.pow(f, 2) * Math.pow(g.x, 2)) / (Math.pow(c, 2) * Math.pow(g.y, 2) + Math.pow(f, 2) * Math.pow(g.x, 2))); isNaN(v) && (v = 0); var b = new n.Point(v * c * g.y / f, v * -f * g.x / c), x = new n.Point((o.x + u.x) / 2 + Math.cos(d) * b.x - Math.sin(d) * b.y, (o.y + u.y) / 2 + Math.sin(d) * b.x + Math.cos(d) * b.y), w = function (t) { return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2)) }, E = function (t, e) { return (t[0] * e[0] + t[1] * e[1]) / (w(t) * w(e)) }, P = function (t, e) { return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(E(t, e)) }, B = P([1, 0], [(g.x - b.x) / c, (g.y - b.y) / f]), C = [(g.x - b.x) / c, (g.y - b.y) / f], T = [(-g.x - b.x) / c, (-g.y - b.y) / f], k = P(C, T); E(C, T) <= -1 && (k = Math.PI), E(C, T) >= 1 && (k = 0); var S = 1 - p ? 1 : -1, V = B + S * (k / 2), M = new n.Point(x.x + c * Math.cos(V), x.y + f * Math.sin(V)); if (e.addMarkerAngle(M, V - S * Math.PI / 2), e.addMarkerAngle(u, V - S * Math.PI), i.addPoint(u.x, u.y), null != t) { E = c > f ? c : f; var A = c > f ? 1 : c / f, R = c > f ? f / c : 1; t.translate(x.x, x.y), t.rotate(d), t.scale(A, R), t.arc(0, 0, E, B, B + k, 1 - p), t.scale(1 / A, 1 / R), t.rotate(-d), t.translate(-x.x, -x.y) } } break; case "Z": case "z": null != t && t.closePath(), e.current = e.start }return i }, this.getMarkers = function () { for (var t = this.PathParser.getMarkerPoints(), e = this.PathParser.getMarkerAngles(), i = [], n = 0; n < t.length; n++)i.push([t[n], e[n]]); return i } }, n.Element.path.prototype = new n.Element.PathElementBase, n.Element.pattern = function (t) { this.base = n.Element.ElementBase, this.base(t), this.createPattern = function (t, e) { var i = this.attribute("width").toPixels("x", !0), a = this.attribute("height").toPixels("y", !0), r = new n.Element.svg; r.attributes.viewBox = new n.Property("viewBox", this.attribute("viewBox").value), r.attributes.width = new n.Property("width", i + "px"), r.attributes.height = new n.Property("height", a + "px"), r.attributes.transform = new n.Property("transform", this.attribute("patternTransform").value), r.children = this.children; var s = document.createElement("canvas"); s.width = i, s.height = a; var o = s.getContext("2d"); this.attribute("x").hasValue() && this.attribute("y").hasValue() && o.translate(this.attribute("x").toPixels("x", !0), this.attribute("y").toPixels("y", !0)); for (var l = -1; l <= 1; l++)for (var h = -1; h <= 1; h++)o.save(), r.attributes.x = new n.Property("x", l * s.width), r.attributes.y = new n.Property("y", h * s.height), r.render(o), o.restore(); return t.createPattern(s, "repeat") } }, n.Element.pattern.prototype = new n.Element.ElementBase, n.Element.marker = function (t) { this.base = n.Element.ElementBase, this.base(t), this.baseRender = this.render, this.render = function (t, e, i) { t.translate(e.x, e.y), "auto" == this.attribute("orient").valueOrDefault("auto") && t.rotate(i), "strokeWidth" == this.attribute("markerUnits").valueOrDefault("strokeWidth") && t.scale(t.lineWidth, t.lineWidth), t.save(); var a = new n.Element.svg; a.attributes.viewBox = new n.Property("viewBox", this.attribute("viewBox").value), a.attributes.refX = new n.Property("refX", this.attribute("refX").value), a.attributes.refY = new n.Property("refY", this.attribute("refY").value), a.attributes.width = new n.Property("width", this.attribute("markerWidth").value), a.attributes.height = new n.Property("height", this.attribute("markerHeight").value), a.attributes.fill = new n.Property("fill", this.attribute("fill").valueOrDefault("black")), a.attributes.stroke = new n.Property("stroke", this.attribute("stroke").valueOrDefault("none")), a.children = this.children, a.render(t), t.restore(), "strokeWidth" == this.attribute("markerUnits").valueOrDefault("strokeWidth") && t.scale(1 / t.lineWidth, 1 / t.lineWidth), "auto" == this.attribute("orient").valueOrDefault("auto") && t.rotate(-i), t.translate(-e.x, -e.y) } }, n.Element.marker.prototype = new n.Element.ElementBase, n.Element.defs = function (t) { this.base = n.Element.ElementBase, this.base(t), this.render = function (t) { } }, n.Element.defs.prototype = new n.Element.ElementBase, n.Element.GradientBase = function (t) { this.base = n.Element.ElementBase, this.base(t), this.stops = []; for (var e = 0; e < this.children.length; e++) { var i = this.children[e]; "stop" == i.type && this.stops.push(i) } this.getGradient = function () { }, this.gradientUnits = function () { return this.attribute("gradientUnits").valueOrDefault("objectBoundingBox") }, this.attributesToInherit = ["gradientUnits"], this.inheritStopContainer = function (t) { for (var e = 0; e < this.attributesToInherit.length; e++) { var i = this.attributesToInherit[e]; !this.attribute(i).hasValue() && t.attribute(i).hasValue() && (this.attribute(i, !0).value = t.attribute(i).value) } }, this.createGradient = function (t, e, i) { var a = this; this.getHrefAttribute().hasValue() && (a = this.getHrefAttribute().getDefinition(), this.inheritStopContainer(a)); var r = function (t) { return i.hasValue() ? new n.Property("color", t).addOpacity(i).value : t }, s = this.getGradient(t, e); if (null == s) return r(a.stops[a.stops.length - 1].color); for (var o = 0; o < a.stops.length; o++)s.addColorStop(a.stops[o].offset, r(a.stops[o].color)); if (this.attribute("gradientTransform").hasValue()) { var l = n.ViewPort.viewPorts[0], h = new n.Element.rect; h.attributes.x = new n.Property("x", -n.MAX_VIRTUAL_PIXELS / 3), h.attributes.y = new n.Property("y", -n.MAX_VIRTUAL_PIXELS / 3), h.attributes.width = new n.Property("width", n.MAX_VIRTUAL_PIXELS), h.attributes.height = new n.Property("height", n.MAX_VIRTUAL_PIXELS); var u = new n.Element.g; u.attributes.transform = new n.Property("transform", this.attribute("gradientTransform").value), u.children = [h]; var c = new n.Element.svg; c.attributes.x = new n.Property("x", 0), c.attributes.y = new n.Property("y", 0), c.attributes.width = new n.Property("width", l.width), c.attributes.height = new n.Property("height", l.height), c.children = [u]; var f = document.createElement("canvas"); f.width = l.width, f.height = l.height; var d = f.getContext("2d"); return d.fillStyle = s, c.render(d), d.createPattern(f, "no-repeat") } return s } }, n.Element.GradientBase.prototype = new n.Element.ElementBase, n.Element.linearGradient = function (t) { this.base = n.Element.GradientBase, this.base(t), this.attributesToInherit.push("x1"), this.attributesToInherit.push("y1"), this.attributesToInherit.push("x2"), this.attributesToInherit.push("y2"), this.getGradient = function (t, e) { var i = "objectBoundingBox" == this.gradientUnits() ? e.getBoundingBox() : null; this.attribute("x1").hasValue() || this.attribute("y1").hasValue() || this.attribute("x2").hasValue() || this.attribute("y2").hasValue() || (this.attribute("x1", !0).value = 0, this.attribute("y1", !0).value = 0, this.attribute("x2", !0).value = 1, this.attribute("y2", !0).value = 0); var n = "objectBoundingBox" == this.gradientUnits() ? i.x() + i.width() * this.attribute("x1").numValue() : this.attribute("x1").toPixels("x"), a = "objectBoundingBox" == this.gradientUnits() ? i.y() + i.height() * this.attribute("y1").numValue() : this.attribute("y1").toPixels("y"), r = "objectBoundingBox" == this.gradientUnits() ? i.x() + i.width() * this.attribute("x2").numValue() : this.attribute("x2").toPixels("x"), s = "objectBoundingBox" == this.gradientUnits() ? i.y() + i.height() * this.attribute("y2").numValue() : this.attribute("y2").toPixels("y"); return n == r && a == s ? null : t.createLinearGradient(n, a, r, s) } }, n.Element.linearGradient.prototype = new n.Element.GradientBase, n.Element.radialGradient = function (t) { this.base = n.Element.GradientBase, this.base(t), this.attributesToInherit.push("cx"), this.attributesToInherit.push("cy"), this.attributesToInherit.push("r"), this.attributesToInherit.push("fx"), this.attributesToInherit.push("fy"), this.getGradient = function (t, e) { var i = e.getBoundingBox(); this.attribute("cx").hasValue() || (this.attribute("cx", !0).value = "50%"), this.attribute("cy").hasValue() || (this.attribute("cy", !0).value = "50%"), this.attribute("r").hasValue() || (this.attribute("r", !0).value = "50%"); var n = "objectBoundingBox" == this.gradientUnits() ? i.x() + i.width() * this.attribute("cx").numValue() : this.attribute("cx").toPixels("x"), a = "objectBoundingBox" == this.gradientUnits() ? i.y() + i.height() * this.attribute("cy").numValue() : this.attribute("cy").toPixels("y"), r = n, s = a; this.attribute("fx").hasValue() && (r = "objectBoundingBox" == this.gradientUnits() ? i.x() + i.width() * this.attribute("fx").numValue() : this.attribute("fx").toPixels("x")), this.attribute("fy").hasValue() && (s = "objectBoundingBox" == this.gradientUnits() ? i.y() + i.height() * this.attribute("fy").numValue() : this.attribute("fy").toPixels("y")); var o = "objectBoundingBox" == this.gradientUnits() ? (i.width() + i.height()) / 2 * this.attribute("r").numValue() : this.attribute("r").toPixels(); return t.createRadialGradient(r, s, 0, n, a, o) } }, n.Element.radialGradient.prototype = new n.Element.GradientBase, n.Element.stop = function (t) { this.base = n.Element.ElementBase, this.base(t), this.offset = this.attribute("offset").numValue(), this.offset < 0 && (this.offset = 0), this.offset > 1 && (this.offset = 1); var e = this.style("stop-color", !0); "" === e.value && (e.value = "#000"), this.style("stop-opacity").hasValue() && (e = e.addOpacity(this.style("stop-opacity"))), this.color = e.value }, n.Element.stop.prototype = new n.Element.ElementBase, n.Element.AnimateBase = function (t) { this.base = n.Element.ElementBase, this.base(t), n.Animations.push(this), this.duration = 0, this.begin = this.attribute("begin").toMilliseconds(), this.maxDuration = this.begin + this.attribute("dur").toMilliseconds(), this.getProperty = function () { var t = this.attribute("attributeType").value, e = this.attribute("attributeName").value; return "CSS" == t ? this.parent.style(e, !0) : this.parent.attribute(e, !0) }, this.initialValue = null, this.initialUnits = "", this.removed = !1, this.calcValue = function () { return "" }, this.update = function (t) { if (null == this.initialValue && (this.initialValue = this.getProperty().value, this.initialUnits = this.getProperty().getUnits()), this.duration > this.maxDuration) { if ("indefinite" == this.attribute("repeatCount").value || "indefinite" == this.attribute("repeatDur").value) this.duration = 0; else if ("freeze" != this.attribute("fill").valueOrDefault("remove") || this.frozen) { if ("remove" == this.attribute("fill").valueOrDefault("remove") && !this.removed) return this.removed = !0, this.getProperty().value = this.parent.animationFrozen ? this.parent.animationFrozenValue : this.initialValue, !0 } else this.frozen = !0, this.parent.animationFrozen = !0, this.parent.animationFrozenValue = this.getProperty().value; return !1 } this.duration = this.duration + t; var e = !1; if (this.begin < this.duration) { var i = this.calcValue(); if (this.attribute("type").hasValue()) i = this.attribute("type").value + "(" + i + ")"; this.getProperty().value = i, e = !0 } return e }, this.from = this.attribute("from"), this.to = this.attribute("to"), this.values = this.attribute("values"), this.values.hasValue() && (this.values.value = this.values.value.split(";")), this.progress = function () { var t = { progress: (this.duration - this.begin) / (this.maxDuration - this.begin) }; if (this.values.hasValue()) { var e = t.progress * (this.values.value.length - 1), i = Math.floor(e), a = Math.ceil(e); t.from = new n.Property("from", parseFloat(this.values.value[i])), t.to = new n.Property("to", parseFloat(this.values.value[a])), t.progress = (e - i) / (a - i) } else t.from = this.from, t.to = this.to; return t } }, n.Element.AnimateBase.prototype = new n.Element.ElementBase, n.Element.animate = function (t) { this.base = n.Element.AnimateBase, this.base(t), this.calcValue = function () { var t = this.progress(); return t.from.numValue() + (t.to.numValue() - t.from.numValue()) * t.progress + this.initialUnits } }, n.Element.animate.prototype = new n.Element.AnimateBase, n.Element.animateColor = function (t) { this.base = n.Element.AnimateBase, this.base(t), this.calcValue = function () { var t = this.progress(), e = new RGBColor(t.from.value), i = new RGBColor(t.to.value); if (e.ok && i.ok) { var n = e.r + (i.r - e.r) * t.progress, a = e.g + (i.g - e.g) * t.progress, r = e.b + (i.b - e.b) * t.progress; return "rgb(" + parseInt(n, 10) + "," + parseInt(a, 10) + "," + parseInt(r, 10) + ")" } return this.attribute("from").value } }, n.Element.animateColor.prototype = new n.Element.AnimateBase, n.Element.animateTransform = function (t) { this.base = n.Element.AnimateBase, this.base(t), this.calcValue = function () { for (var t = this.progress(), e = n.ToNumberArray(t.from.value), i = n.ToNumberArray(t.to.value), a = "", r = 0; r < e.length; r++)a += e[r] + (i[r] - e[r]) * t.progress + " "; return a } }, n.Element.animateTransform.prototype = new n.Element.animate, n.Element.font = function (t) { this.base = n.Element.ElementBase, this.base(t), this.horizAdvX = this.attribute("horiz-adv-x").numValue(), this.isRTL = !1, this.isArabic = !1, this.fontFace = null, this.missingGlyph = null, this.glyphs = []; for (var e = 0; e < this.children.length; e++) { var i = this.children[e]; "font-face" == i.type ? (this.fontFace = i, i.style("font-family").hasValue() && (n.Definitions[i.style("font-family").value] = this)) : "missing-glyph" == i.type ? this.missingGlyph = i : "glyph" == i.type && ("" != i.arabicForm ? (this.isRTL = !0, this.isArabic = !0, void 0 === this.glyphs[i.unicode] && (this.glyphs[i.unicode] = []), this.glyphs[i.unicode][i.arabicForm] = i) : this.glyphs[i.unicode] = i) } }, n.Element.font.prototype = new n.Element.ElementBase, n.Element.fontface = function (t) { this.base = n.Element.ElementBase, this.base(t), this.ascent = this.attribute("ascent").value, this.descent = this.attribute("descent").value, this.unitsPerEm = this.attribute("units-per-em").numValue() }, n.Element.fontface.prototype = new n.Element.ElementBase, n.Element.missingglyph = function (t) { this.base = n.Element.path, this.base(t), this.horizAdvX = 0 }, n.Element.missingglyph.prototype = new n.Element.path, n.Element.glyph = function (t) { this.base = n.Element.path, this.base(t), this.horizAdvX = this.attribute("horiz-adv-x").numValue(), this.unicode = this.attribute("unicode").value, this.arabicForm = this.attribute("arabic-form").value }, n.Element.glyph.prototype = new n.Element.path, n.Element.text = function (t) { this.captureTextNodes = !0, this.base = n.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) { this.baseSetContext(t); var e = this.style("dominant-baseline").toTextBaseline(); null == e && (e = this.style("alignment-baseline").toTextBaseline()), null != e && (t.textBaseline = e) }, this.getBoundingBox = function () { var t = this.attribute("x").toPixels("x"), e = this.attribute("y").toPixels("y"), i = this.parent.style("font-size").numValueOrDefault(n.Font.Parse(n.ctx.font).fontSize); return new n.BoundingBox(t, e - i, t + Math.floor(2 * i / 3) * this.children[0].getText().length, e) }, this.renderChildren = function (t) { this.x = this.attribute("x").toPixels("x"), this.y = this.attribute("y").toPixels("y"), this.attribute("dx").hasValue() && (this.x += this.attribute("dx").toPixels("x")), this.attribute("dy").hasValue() && (this.y += this.attribute("dy").toPixels("y")), this.x += this.getAnchorDelta(t, this, 0); for (var e = 0; e < this.children.length; e++)this.renderChild(t, this, e) }, this.getAnchorDelta = function (t, e, i) { var n = this.style("text-anchor").valueOrDefault("start"); if ("start" != n) { for (var a = 0, r = i; r < e.children.length; r++) { var s = e.children[r]; if (r > i && s.attribute("x").hasValue()) break; a += s.measureTextRecursive(t) } return -1 * ("end" == n ? a : a / 2) } return 0 }, this.renderChild = function (t, e, i) { var n = e.children[i]; n.attribute("x").hasValue() ? (n.x = n.attribute("x").toPixels("x") + e.getAnchorDelta(t, e, i), n.attribute("dx").hasValue() && (n.x += n.attribute("dx").toPixels("x"))) : (n.attribute("dx").hasValue() && (e.x += n.attribute("dx").toPixels("x")), n.x = e.x), e.x = n.x + n.measureText(t), n.attribute("y").hasValue() ? (n.y = n.attribute("y").toPixels("y"), n.attribute("dy").hasValue() && (n.y += n.attribute("dy").toPixels("y"))) : (n.attribute("dy").hasValue() && (e.y += n.attribute("dy").toPixels("y")), n.y = e.y), e.y = n.y, n.render(t); for (i = 0; i < n.children.length; i++)e.renderChild(t, n, i) } }, n.Element.text.prototype = new n.Element.RenderedElementBase, n.Element.TextElementBase = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.getGlyph = function (t, e, i) { var n = e[i], a = null; if (t.isArabic) { var r = "isolated"; (0 == i || " " == e[i - 1]) && i < e.length - 2 && " " != e[i + 1] && (r = "terminal"), i > 0 && " " != e[i - 1] && i < e.length - 2 && " " != e[i + 1] && (r = "medial"), i > 0 && " " != e[i - 1] && (i == e.length - 1 || " " == e[i + 1]) && (r = "initial"), void 0 !== t.glyphs[n] && null == (a = t.glyphs[n][r]) && "glyph" == t.glyphs[n].type && (a = t.glyphs[n]) } else a = t.glyphs[n]; return null == a && (a = t.missingGlyph), a }, this.renderChildren = function (t) { var e = this.parent.style("font-family").getDefinition(); if (null == e) "" != t.fillStyle && t.fillText(n.compressSpaces(this.getText()), this.x, this.y), "" != t.strokeStyle && t.strokeText(n.compressSpaces(this.getText()), this.x, this.y); else { var i = this.parent.style("font-size").numValueOrDefault(n.Font.Parse(n.ctx.font).fontSize), a = this.parent.style("font-style").valueOrDefault(n.Font.Parse(n.ctx.font).fontStyle), r = this.getText(); e.isRTL && (r = r.split("").reverse().join("")); for (var s = n.ToNumberArray(this.parent.attribute("dx").value), o = 0; o < r.length; o++) { var l = this.getGlyph(e, r, o), h = i / e.fontFace.unitsPerEm; t.translate(this.x, this.y), t.scale(h, -h); var u = t.lineWidth; t.lineWidth = t.lineWidth * e.fontFace.unitsPerEm / i, "italic" == a && t.transform(1, 0, .4, 1, 0, 0), l.render(t), "italic" == a && t.transform(1, 0, -.4, 1, 0, 0), t.lineWidth = u, t.scale(1 / h, -1 / h), t.translate(-this.x, -this.y), this.x += i * (l.horizAdvX || e.horizAdvX) / e.fontFace.unitsPerEm, void 0 === s[o] || isNaN(s[o]) || (this.x += s[o]) } } }, this.getText = function () { }, this.measureTextRecursive = function (t) { for (var e = this.measureText(t), i = 0; i < this.children.length; i++)e += this.children[i].measureTextRecursive(t); return e }, this.measureText = function (t) { var e = this.parent.style("font-family").getDefinition(); if (null != e) { var i = this.parent.style("font-size").numValueOrDefault(n.Font.Parse(n.ctx.font).fontSize), a = 0, r = this.getText(); e.isRTL && (r = r.split("").reverse().join("")); for (var s = n.ToNumberArray(this.parent.attribute("dx").value), o = 0; o < r.length; o++) { a += (this.getGlyph(e, r, o).horizAdvX || e.horizAdvX) * i / e.fontFace.unitsPerEm, void 0 === s[o] || isNaN(s[o]) || (a += s[o]) } return a } var l = n.compressSpaces(this.getText()); if (!t.measureText) return 10 * l.length; t.save(), this.setContext(t); var h = t.measureText(l).width; return t.restore(), h } }, n.Element.TextElementBase.prototype = new n.Element.RenderedElementBase, n.Element.tspan = function (t) { this.captureTextNodes = !0, this.base = n.Element.TextElementBase, this.base(t), this.text = n.compressSpaces(t.value || t.text || t.textContent || ""), this.getText = function () { return this.children.length > 0 ? "" : this.text } }, n.Element.tspan.prototype = new n.Element.TextElementBase, n.Element.tref = function (t) { this.base = n.Element.TextElementBase, this.base(t), this.getText = function () { var t = this.getHrefAttribute().getDefinition(); if (null != t) return t.children[0].getText() } }, n.Element.tref.prototype = new n.Element.TextElementBase, n.Element.a = function (t) { this.base = n.Element.TextElementBase, this.base(t), this.hasText = t.childNodes.length > 0; for (var e = 0; e < t.childNodes.length; e++)3 != t.childNodes[e].nodeType && (this.hasText = !1); this.text = this.hasText ? t.childNodes[0].value : "", this.getText = function () { return this.text }, this.baseRenderChildren = this.renderChildren, this.renderChildren = function (t) { if (this.hasText) { this.baseRenderChildren(t); var e = new n.Property("fontSize", n.Font.Parse(n.ctx.font).fontSize); n.Mouse.checkBoundingBox(this, new n.BoundingBox(this.x, this.y - e.toPixels("y"), this.x + this.measureText(t), this.y)) } else if (this.children.length > 0) { var i = new n.Element.g; i.children = this.children, i.parent = this, i.render(t) } }, this.onclick = function () { window.open(this.getHrefAttribute().value) }, this.onmousemove = function () { n.ctx.canvas.style.cursor = "pointer" } }, n.Element.a.prototype = new n.Element.TextElementBase, n.Element.image = function (t) { this.base = n.Element.RenderedElementBase, this.base(t); var e = this.getHrefAttribute().value; if ("" != e) { var i = e.match(/\.svg$/); if (n.Images.push(this), this.loaded = !1, i) this.img = n.ajax(e), this.loaded = !0; else { this.img = document.createElement("img"), 1 == n.opts.useCORS && (this.img.crossOrigin = "Anonymous"); var a = this; this.img.onload = function () { a.loaded = !0 }, this.img.onerror = function () { n.log('ERROR: image "' + e + '" not found'), a.loaded = !0 }, this.img.src = e } this.renderChildren = function (t) { var e = this.attribute("x").toPixels("x"), a = this.attribute("y").toPixels("y"), r = this.attribute("width").toPixels("x"), s = this.attribute("height").toPixels("y"); 0 != r && 0 != s && (t.save(), i ? t.drawSvg(this.img, e, a, r, s) : (t.translate(e, a), n.AspectRatio(t, this.attribute("preserveAspectRatio").value, r, this.img.width, s, this.img.height, 0, 0), t.drawImage(this.img, 0, 0)), t.restore()) }, this.getBoundingBox = function () { var t = this.attribute("x").toPixels("x"), e = this.attribute("y").toPixels("y"), i = this.attribute("width").toPixels("x"), a = this.attribute("height").toPixels("y"); return new n.BoundingBox(t, e, t + i, e + a) } } }, n.Element.image.prototype = new n.Element.RenderedElementBase, n.Element.g = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.getBoundingBox = function () { for (var t = new n.BoundingBox, e = 0; e < this.children.length; e++)t.addBoundingBox(this.children[e].getBoundingBox()); return t } }, n.Element.g.prototype = new n.Element.RenderedElementBase, n.Element.symbol = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.render = function (t) { } }, n.Element.symbol.prototype = new n.Element.RenderedElementBase, n.Element.style = function (t) { this.base = n.Element.ElementBase, this.base(t); for (var e = "", i = 0; i < t.childNodes.length; i++)e += t.childNodes[i].data; e = e.replace(/(\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*+\/)|(^[\s]*\/\/.*)/gm, ""); var a = (e = n.compressSpaces(e)).split("}"); for (i = 0; i < a.length; i++)if ("" != n.trim(a[i])) for (var r = a[i].split("{"), s = r[0].split(","), o = r[1].split(";"), l = 0; l < s.length; l++) { var u = n.trim(s[l]); if ("" != u) { for (var c = {}, f = 0; f < o.length; f++) { var d = o[f].indexOf(":"), m = o[f].substr(0, d), p = o[f].substr(d + 1, o[f].length - d); null != m && null != p && (c[n.trim(m)] = new n.Property(n.trim(m), n.trim(p))) } if (n.Styles[u] = c, n.StylesSpecificity[u] = h(u), "@font-face" == u) for (var g = c["font-family"].value.replace(/"/g, ""), y = c.src.value.split(","), v = 0; v < y.length; v++)if (y[v].indexOf('format("svg")') > 0) for (var b = y[v].indexOf("url"), x = y[v].indexOf(")", b), w = y[v].substr(b + 5, x - b - 6), E = n.parseXml(n.ajax(w)).getElementsByTagName("font"), P = 0; P < E.length; P++) { var B = n.CreateElement(E[P]); n.Definitions[g] = B } } } }, n.Element.style.prototype = new n.Element.ElementBase, n.Element.use = function (t) { this.base = n.Element.RenderedElementBase, this.base(t), this.baseSetContext = this.setContext, this.setContext = function (t) { this.baseSetContext(t), this.attribute("x").hasValue() && t.translate(this.attribute("x").toPixels("x"), 0), this.attribute("y").hasValue() && t.translate(0, this.attribute("y").toPixels("y")) }; var e = this.getHrefAttribute().getDefinition(); this.path = function (t) { null != e && e.path(t) }, this.getBoundingBox = function () { if (null != e) return e.getBoundingBox() }, this.renderChildren = function (t) { if (null != e) { var i = e; "symbol" == e.type && ((i = new n.Element.svg).type = "svg", i.attributes.viewBox = new n.Property("viewBox", e.attribute("viewBox").value), i.attributes.preserveAspectRatio = new n.Property("preserveAspectRatio", e.attribute("preserveAspectRatio").value), i.attributes.overflow = new n.Property("overflow", e.attribute("overflow").value), i.children = e.children), "svg" == i.type && (this.attribute("width").hasValue() && (i.attributes.width = new n.Property("width", this.attribute("width").value)), this.attribute("height").hasValue() && (i.attributes.height = new n.Property("height", this.attribute("height").value))); var a = i.parent; i.parent = null, i.render(t), i.parent = a } } }, n.Element.use.prototype = new n.Element.RenderedElementBase, n.Element.mask = function (t) { this.base = n.Element.ElementBase, this.base(t), this.apply = function (t, e) { var i = this.attribute("x").toPixels("x"), a = this.attribute("y").toPixels("y"), r = this.attribute("width").toPixels("x"), s = this.attribute("height").toPixels("y"); if (0 == r && 0 == s) { for (var o = new n.BoundingBox, l = 0; l < this.children.length; l++)o.addBoundingBox(this.children[l].getBoundingBox()); i = Math.floor(o.x1), a = Math.floor(o.y1), r = Math.floor(o.width()), s = Math.floor(o.height()) } var h = e.attribute("mask").value; e.attribute("mask").value = ""; var u = document.createElement("canvas"); u.width = i + r, u.height = a + s; var c = u.getContext("2d"); this.renderChildren(c); var f = document.createElement("canvas"); f.width = i + r, f.height = a + s; var d = f.getContext("2d"); e.render(d), d.globalCompositeOperation = "destination-in", d.fillStyle = c.createPattern(u, "no-repeat"), d.fillRect(0, 0, i + r, a + s), t.fillStyle = d.createPattern(f, "no-repeat"), t.fillRect(0, 0, i + r, a + s), e.attribute("mask").value = h }, this.render = function (t) { } }, n.Element.mask.prototype = new n.Element.ElementBase, n.Element.clipPath = function (t) { this.base = n.Element.ElementBase, this.base(t), this.apply = function (t) { var e = CanvasRenderingContext2D.prototype.beginPath; CanvasRenderingContext2D.prototype.beginPath = function () { }; var i = CanvasRenderingContext2D.prototype.closePath; CanvasRenderingContext2D.prototype.closePath = function () { }, e.call(t); for (var a = 0; a < this.children.length; a++) { var r = this.children[a]; if (void 0 !== r.path) { var s = null; r.style("transform", !1, !0).hasValue() && (s = new n.Transform(r.style("transform", !1, !0).value)).apply(t), r.path(t), CanvasRenderingContext2D.prototype.closePath = i, s && s.unapply(t) } } i.call(t), t.clip(), CanvasRenderingContext2D.prototype.beginPath = e, CanvasRenderingContext2D.prototype.closePath = i }, this.render = function (t) { } }, n.Element.clipPath.prototype = new n.Element.ElementBase, n.Element.filter = function (t) { this.base = n.Element.ElementBase, this.base(t), this.apply = function (t, e) { var i = e.getBoundingBox(), n = Math.floor(i.x1), a = Math.floor(i.y1), r = Math.floor(i.width()), s = Math.floor(i.height()), o = e.style("filter").value; e.style("filter").value = ""; for (var l = 0, h = 0, u = 0; u < this.children.length; u++) { var c = this.children[u].extraFilterDistance || 0; l = Math.max(l, c), h = Math.max(h, c) } var f = document.createElement("canvas"); f.width = r + 2 * l, f.height = s + 2 * h; var d = f.getContext("2d"); d.translate(-n + l, -a + h), e.render(d); for (u = 0; u < this.children.length; u++)"function" == typeof this.children[u].apply && this.children[u].apply(d, 0, 0, r + 2 * l, s + 2 * h); t.drawImage(f, 0, 0, r + 2 * l, s + 2 * h, n - l, a - h, r + 2 * l, s + 2 * h), e.style("filter", !0).value = o }, this.render = function (t) { } }, n.Element.filter.prototype = new n.Element.ElementBase, n.Element.feMorphology = function (t) { this.base = n.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, a) { } }, n.Element.feMorphology.prototype = new n.Element.ElementBase, n.Element.feComposite = function (t) { this.base = n.Element.ElementBase, this.base(t), this.apply = function (t, e, i, n, a) { } }, n.Element.feComposite.prototype = new n.Element.ElementBase, n.Element.feColorMatrix = function (t) { this.base = n.Element.ElementBase, this.base(t); var e = n.ToNumberArray(this.attribute("values").value); switch (this.attribute("type").valueOrDefault("matrix")) { case "saturate": var i = e[0]; e = [.213 + .787 * i, .715 - .715 * i, .072 - .072 * i, 0, 0, .213 - .213 * i, .715 + .285 * i, .072 - .072 * i, 0, 0, .213 - .213 * i, .715 - .715 * i, .072 + .928 * i, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]; break; case "hueRotate": var a = e[0] * Math.PI / 180, r = function (t, e, i) { return t + Math.cos(a) * e + Math.sin(a) * i }; e = [r(.213, .787, -.213), r(.715, -.715, -.715), r(.072, -.072, .928), 0, 0, r(.213, -.213, .143), r(.715, .285, .14), r(.072, -.072, -.283), 0, 0, r(.213, -.213, -.787), r(.715, -.715, .715), r(.072, .928, .072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]; break; case "luminanceToAlpha": e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .2125, .7154, .0721, 0, 0, 0, 0, 0, 0, 1] }function s(t, e, i, n, a, r) { return t[i * n * 4 + 4 * e + r] } function o(t, e, i, n, a, r, s) { t[i * n * 4 + 4 * e + r] = s } function l(t, i) { var n = e[t]; return n * (n < 0 ? i - 255 : i) } this.apply = function (t, e, i, n, a) { var r = t.getImageData(0, 0, n, a); for (i = 0; i < a; i++)for (e = 0; e < n; e++) { var h = s(r.data, e, i, n, 0, 0), u = s(r.data, e, i, n, 0, 1), c = s(r.data, e, i, n, 0, 2), f = s(r.data, e, i, n, 0, 3); o(r.data, e, i, n, 0, 0, l(0, h) + l(1, u) + l(2, c) + l(3, f) + l(4, 1)), o(r.data, e, i, n, 0, 1, l(5, h) + l(6, u) + l(7, c) + l(8, f) + l(9, 1)), o(r.data, e, i, n, 0, 2, l(10, h) + l(11, u) + l(12, c) + l(13, f) + l(14, 1)), o(r.data, e, i, n, 0, 3, l(15, h) + l(16, u) + l(17, c) + l(18, f) + l(19, 1)) } t.clearRect(0, 0, n, a), t.putImageData(r, 0, 0) } }, n.Element.feColorMatrix.prototype = new n.Element.ElementBase, n.Element.feGaussianBlur = function (t) { this.base = n.Element.ElementBase, this.base(t), this.blurRadius = Math.floor(this.attribute("stdDeviation").numValue()), this.extraFilterDistance = this.blurRadius, this.apply = function (t, e, i, a, r) { void 0 !== stackBlurCanvasRGBA ? (t.canvas.id = n.UniqueId(), t.canvas.style.display = "none", document.body.appendChild(t.canvas), stackBlurCanvasRGBA(t.canvas.id, e, i, a, r, this.blurRadius), document.body.removeChild(t.canvas)) : n.log("ERROR: StackBlur.js must be included for blur to work") } }, n.Element.feGaussianBlur.prototype = new n.Element.ElementBase, n.Element.title = function (t) { }, n.Element.title.prototype = new n.Element.ElementBase, n.Element.desc = function (t) { }, n.Element.desc.prototype = new n.Element.ElementBase, n.Element.MISSING = function (t) { n.log("ERROR: Element '" + t.nodeName + "' not yet implemented.") }, n.Element.MISSING.prototype = new n.Element.ElementBase, n.CreateElement = function (t) { var e = t.nodeName.replace(/^[^:]+:/, ""); e = e.replace(/\-/g, ""); var i = null; return (i = void 0 !== n.Element[e] ? new n.Element[e](t) : new n.Element.MISSING(t)).type = t.nodeName, i }, n.load = function (t, e) { n.loadXml(t, n.ajax(e)) }, n.loadXml = function (t, e) { n.loadXmlDoc(t, n.parseXml(e)) }, n.loadXmlDoc = function (t, e) { n.init(t); var i = function (e) { for (var i = t.canvas; i;)e.x -= i.offsetLeft, e.y -= i.offsetTop, i = i.offsetParent; return window.scrollX && (e.x += window.scrollX), window.scrollY && (e.y += window.scrollY), e }; 1 != n.opts.ignoreMouse && (t.canvas.onclick = function (t) { var e = i(new n.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY)); n.Mouse.onclick(e.x, e.y) }, t.canvas.onmousemove = function (t) { var e = i(new n.Point(null != t ? t.clientX : event.clientX, null != t ? t.clientY : event.clientY)); n.Mouse.onmousemove(e.x, e.y) }); var a = n.CreateElement(e.documentElement); a.root = !0, a.addStylesFromStyleDefinition(); var r = !0, s = function () { n.ViewPort.Clear(), t.canvas.parentNode && n.ViewPort.SetCurrent(t.canvas.parentNode.clientWidth, t.canvas.parentNode.clientHeight), 1 != n.opts.ignoreDimensions && (a.style("width").hasValue() && (t.canvas.width = a.style("width").toPixels("x"), t.canvas.style.width = t.canvas.width + "px"), a.style("height").hasValue() && (t.canvas.height = a.style("height").toPixels("y"), t.canvas.style.height = t.canvas.height + "px")); var i = t.canvas.clientWidth || t.canvas.width, s = t.canvas.clientHeight || t.canvas.height; if (1 == n.opts.ignoreDimensions && a.style("width").hasValue() && a.style("height").hasValue() && (i = a.style("width").toPixels("x"), s = a.style("height").toPixels("y")), n.ViewPort.SetCurrent(i, s), null != n.opts.offsetX && (a.attribute("x", !0).value = n.opts.offsetX), null != n.opts.offsetY && (a.attribute("y", !0).value = n.opts.offsetY), null != n.opts.scaleWidth || null != n.opts.scaleHeight) { var o = null, l = null, h = n.ToNumberArray(a.attribute("viewBox").value); null != n.opts.scaleWidth && (a.attribute("width").hasValue() ? o = a.attribute("width").toPixels("x") / n.opts.scaleWidth : isNaN(h[2]) || (o = h[2] / n.opts.scaleWidth)), null != n.opts.scaleHeight && (a.attribute("height").hasValue() ? l = a.attribute("height").toPixels("y") / n.opts.scaleHeight : isNaN(h[3]) || (l = h[3] / n.opts.scaleHeight)), null == o && (o = l), null == l && (l = o), a.attribute("width", !0).value = n.opts.scaleWidth, a.attribute("height", !0).value = n.opts.scaleHeight, a.style("transform", !0, !0).value += " scale(" + 1 / o + "," + 1 / l + ")" } 1 != n.opts.ignoreClear && t.clearRect(0, 0, i, s), a.render(t), r && (r = !1, "function" == typeof n.opts.renderCallback && n.opts.renderCallback(e)) }, o = !0; n.ImagesLoaded() && (o = !1, s()), n.intervalID = setInterval(function () { var t = !1; if (o && n.ImagesLoaded() && (o = !1, t = !0), 1 != n.opts.ignoreMouse && (t |= n.Mouse.hasEvents()), 1 != n.opts.ignoreAnimation) for (var e = 0; e < n.Animations.length; e++)t |= n.Animations[e].update(1e3 / n.FRAMERATE); "function" == typeof n.opts.forceRedraw && 1 == n.opts.forceRedraw() && (t = !0), t && (s(), n.Mouse.runEvents()) }, 1e3 / n.FRAMERATE) }, n.stop = function () { n.intervalID && clearInterval(n.intervalID) }, n.Mouse = new function () { this.events = [], this.hasEvents = function () { return 0 != this.events.length }, this.onclick = function (t, e) { this.events.push({ type: "onclick", x: t, y: e, run: function (t) { t.onclick && t.onclick() } }) }, this.onmousemove = function (t, e) { this.events.push({ type: "onmousemove", x: t, y: e, run: function (t) { t.onmousemove && t.onmousemove() } }) }, this.eventElements = [], this.checkPath = function (t, e) { for (var i = 0; i < this.events.length; i++) { var n = this.events[i]; e.isPointInPath && e.isPointInPath(n.x, n.y) && (this.eventElements[i] = t) } }, this.checkBoundingBox = function (t, e) { for (var i = 0; i < this.events.length; i++) { var n = this.events[i]; e.isPointInBox(n.x, n.y) && (this.eventElements[i] = t) } }, this.runEvents = function () { n.ctx.canvas.style.cursor = ""; for (var t = 0; t < this.events.length; t++)for (var e = this.events[t], i = this.eventElements[t]; i;)e.run(i), i = i.parent; this.events = [], this.eventElements = [] } }, n } }(), "undefined" != typeof CanvasRenderingContext2D && (CanvasRenderingContext2D.prototype.drawSvg = function (t, e, i, n, a) { canvg(this.canvas, t, { ignoreMouse: !0, ignoreAnimation: !0, ignoreDimensions: !0, ignoreClear: !0, offsetX: e, offsetY: i, scaleWidth: n, scaleHeight: a }) });